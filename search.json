[{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"install-and-load-austraits","dir":"Articles","previous_headings":"","what":"Install and load austraits","title":"austraits","text":"austraits still development. install current version GitHub:","code":"#install.packages(\"remotes\") remotes::install_github(\"traitecoevo/austraits\", dependencies = TRUE, upgrade = \"ask\")  # Load the austraits package library(austraits)"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"retrieve-austraits-database","dir":"Articles","previous_headings":"Install and load austraits","what":"Retrieve AusTraits database","title":"austraits","text":"use latest AusTraits database example database. can download AusTraits database calling load_austraits(). function download AusTraits specified path. default data/austraits. function reload database location future. can set update = TRUE database downloaded fresh Zenodo. Note load_austraits() happily accept DOI particular version. can check different versions AusTraits associated DOI using: AusTraits, like traits.build databases, relational database. R, large list multiple tables. familiar working lists R, recommend quick look tutorial. learn structure austraits, check structure database.","code":"austraits <- load_austraits(version = \"6.0.0\", path = \"data/austraits\") get_versions(path = \"data/austraits\") #> # A tibble: 6 × 4 #>   publication_date doi                     version id       #>   <date>           <chr>                   <chr>   <chr>    #> 1 2024-05-14       10.5281/zenodo.11188867 6.0.0   11188867 #> 2 2023-11-19       10.5281/zenodo.10156222 5.0.0   10156222 #> 3 2023-09-18       10.5281/zenodo.8353840  4.2.0   8353840  #> 4 2023-01-30       10.5281/zenodo.7583087  4.1.0   7583087  #> 5 2022-11-27       10.5281/zenodo.7368074  4.0.0   7368074  #> 6 2021-07-14       10.5281/zenodo.5112001  3.0.2   5112001 austraits #> ── This is 6.0.0 of AusTraits: a curated plant trait database for the Australian flora! ──────────────────────────────  #> ℹ This database is built using traits.build version 1.1.0.9000 #> ℹ This database contains a total of 1726024 records, for 33494 taxa and 497 traits.  #> ── This object is a 'list' with the following components: ── #>  #> • traits: A table containing measurements of traits. #> • locations: A table containing observations of location/site characteristics associated with information in #> `traits`. Cross referencing between the two dataframes is possible using combinations of the variables `dataset_id`, #> `location_name`. #> • contexts: A table containing observations of contextual characteristics associated with information in `traits`. #> Cross referencing between the two dataframes is possible using combinations of the variables `dataset_id`, `link_id`, #> and `link_vals`. #> • methods: A table containing details on methods with which data were collected, including time frame and source. #> Cross referencing with the `traits` table is possible using combinations of the variables `dataset_id`, `trait_name`. #> • excluded_data: A table of data that did not pass quality test and so were excluded from the master dataset. #> • taxonomic_updates: A table of all taxonomic changes implemented in the construction of AusTraits. Changes are #> determined by comparing against the APC (Australian Plant Census) and APNI (Australian Plant Names Index). #> • taxa: A table containing details on taxa associated with information in `traits`. This information has been sourced #> from the APC (Australian Plant Census) and APNI (Australian Plant Names Index) and is released under a CC-BY3 #> license. #> • contributors: A table of people contributing to each study. #> • sources: Bibtex entries for all primary and secondary sources in the compilation. #> • definitions: A copy of the definitions for all tables and terms. Information included here was used to process data #> and generate any documentation for the study. #> • schema: A copy of the schema for all tables and terms. Information included here was used to process data and #> generate any documentation for the study. #> • metadata: Metadata associated with the dataset, including title, creators, license, subject, funding sources. #> • build_info: A description of the computing environment used to create this version of the dataset, including #> version number, git commit and R session_info.  #> ℹ To access a component, try using the $ e.g. austraits$traits"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"descriptive-summaries-of-traits-and-taxa","dir":"Articles","previous_headings":"","what":"Descriptive summaries of traits and taxa","title":"austraits","text":"AusTraits contains 497 plant traits. Check definitions traits learn trait defined. look data coverage trait taxa :","code":"summarise_database(austraits, \"trait_name\") #> # A tibble: 497 × 5 #>    trait_name                    n_records n_dataset n_taxa percent_total #>    <chr>                             <int>     <int>  <int>         <dbl> #>  1 accessory_cost_fraction              47         1     47     0.0000272 #>  2 accessory_cost_mass                  47         1     47     0.0000272 #>  3 atmospheric_CO2_concentration       840         4    121     0.000487  #>  4 bark_Al_per_dry_mass                 70         1     10     0.0000406 #>  5 bark_B_per_dry_mass                  70         1     10     0.0000406 #>  6 bark_C_per_dry_mass                 229         2     27     0.000133  #>  7 bark_Ca_per_dry_mass                104         3     21     0.0000603 #>  8 bark_Cu_per_dry_mass                 70         1     10     0.0000406 #>  9 bark_Fe_per_dry_mass                 70         1     10     0.0000406 #> 10 bark_K_per_dry_mass                 104         3     21     0.0000603 #> # ℹ 487 more rows summarise_database(austraits, \"family\") #> # A tibble: 310 × 5 #>    family           n_records n_dataset n_taxa percent_total #>    <chr>                <int>     <int>  <int>         <dbl> #>  1 Acanthaceae           3719        57    149     0.00216   #>  2 Achariaceae            162        14      3     0.0000939 #>  3 Actinidiaceae          186        16      3     0.000108  #>  4 Agapanthaceae          107        13      3     0.000062  #>  5 Aizoaceae             5004        63    102     0.0029    #>  6 Akaniaceae             123        16      1     0.0000713 #>  7 Alismataceae           892        30     20     0.000517  #>  8 Alliaceae              561        19     18     0.000325  #>  9 Alseuosmiaceae         318        13      3     0.000184  #> 10 Alstroemeriaceae       175        15      2     0.000101  #> # ℹ 300 more rows summarise_database(austraits, \"genus\") #> # A tibble: 3,177 × 5 #>    genus        n_records n_dataset n_taxa percent_total #>    <chr>            <int>     <int>  <int>         <dbl> #>  1 (Dockrillia          3         2      1    0.00000174 #>  2 Abelia              16         4      1    0.00000928 #>  3 Abelmoschus        271        19      8    0.000157   #>  4 Abildgaardia        74         7      2    0.0000429  #>  5 Abrodictyum        123        14      3    0.0000713  #>  6 Abroma              39         7      2    0.0000226  #>  7 Abrophyllum        181        19      3    0.000105   #>  8 Abrotanella        183        18      4    0.000106   #>  9 Abrus              202        26      3    0.000117   #> 10 Abutilon          1975        52     54    0.00115    #> # ℹ 3,167 more rows"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"quickly-look-up-data","dir":"Articles","previous_headings":"","what":"Quickly look up data","title":"austraits","text":"Interested specific trait context property, unsure terms use? Try lookup_ functions.","code":"lookup_trait(austraits, \"leaf\") %>% head() #> [1] \"leaf_compoundness\" \"leaf_phenology\"    \"leaf_length\"       \"leaf_width\"        \"leaf_margin\"       #> [6] \"leaf_shape\" lookup_context_property(austraits, \"fire\") %>% head() #> [1] \"fire intensity\"     \"fire history\"       \"fire response type\" \"fire severity\"      \"fire season\" lookup_location_property(austraits, \"temperature\") %>% head() #> [1] \"temperature, max (C)\"             \"temperature, MAT (C)\"             \"temperature, mean summer max (C)\" #> [4] \"temperature, mean winter max (C)\" \"temperature, max MAT (C)\"         \"temperature, min MAT (C)\""},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extracting-data","dir":"Articles","previous_headings":"","what":"Extracting data","title":"austraits","text":"cases, users like extract subset database research purposes. extract_dataset() filters particular study extract_trait() filters certain trait extract_taxa() filters specific taxon Note can supply vector functions filter one study/trait/taxa. extract_ function supports partial matching e.g. extract_trait(\"leaf\") return traits containing leaf. like extract tables columns, use extract_data extract_ functions simultaneously filter across tables database.","code":""},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extracting-by-dataset","dir":"Articles","previous_headings":"Extracting data","what":"Extracting by dataset","title":"austraits","text":"Filtering one particular dataset assigning object Filtering multiple datasets assigning object Filtering multiple datasets lead author (e.g. Falster) assigning object.","code":"one_study <- extract_dataset(austraits, \"Falster_2005_2\")  one_study$traits #> # A tibble: 165 × 26 #>    dataset_id     taxon_name    observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>          <chr>         <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Falster_2005_2 Acacia longi… 01             huber_val… 0.00… mm2{… population  mean       measurement    unknown    #>  2 Falster_2005_2 Acacia longi… 01             huber_val… 0.00… mm2{… population  mean       measurement    unknown    #>  3 Falster_2005_2 Acacia longi… 01             huber_val… 0.00… mm2{… population  mean       measurement    unknown    #>  4 Falster_2005_2 Acacia longi… 01             huber_val… 0.00… mm2{… population  mean       measurement    unknown    #>  5 Falster_2005_2 Acacia longi… 01             leaf_N_pe… 23.2  mg/g  population  mean       measurement    4          #>  6 Falster_2005_2 Acacia longi… 01             leaf_area  1761  mm2   population  mean       measurement    4          #>  7 Falster_2005_2 Acacia longi… 01             leaf_mass… 128   g/m2  population  mean       measurement    4          #>  8 Falster_2005_2 Acacia longi… 01             plant_hei… 4     m     population  maximum    measurement    unknown    #>  9 Falster_2005_2 Acacia longi… 01             resprouti… fire… <NA>  population  mode       expert_score   <NA>       #> 10 Falster_2005_2 Acacia longi… 01             seed_dry_… 14    mg    population  mean       measurement    unknown    #> # ℹ 155 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr> multi_studies <- extract_dataset(austraits,                                          dataset_id = c(\"Thompson_2001\",\"Ilic_2000\"))   multi_studies$traits #> # A tibble: 2,209 × 26 #>    dataset_id taxon_name       observation_id trait_name  value unit  entity_type value_type basis_of_value replicates #>    <chr>      <chr>            <chr>          <chr>       <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Ilic_2000  Acacia acradenia 0001           wood_densi… 0.904 mg/m… individual  raw        measurement    unknown    #>  2 Ilic_2000  Acacia acuminata 0002           wood_densi… 0.895 mg/m… individual  raw        measurement    unknown    #>  3 Ilic_2000  Acacia acuminata 0003           wood_densi… 1.008 mg/m… individual  raw        measurement    unknown    #>  4 Ilic_2000  Acacia adsurgens 0004           wood_densi… 0.887 mg/m… individual  raw        measurement    unknown    #>  5 Ilic_2000  Acacia alleniana 0005           wood_densi… 0.56  mg/m… individual  raw        measurement    unknown    #>  6 Ilic_2000  Acacia ampliceps 0006           wood_densi… 0.568 mg/m… individual  raw        measurement    unknown    #>  7 Ilic_2000  Acacia aneura    0007           wood_densi… 1.035 mg/m… individual  raw        measurement    unknown    #>  8 Ilic_2000  Acacia aneura    0008           wood_densi… 1.019 mg/m… individual  raw        measurement    unknown    #>  9 Ilic_2000  Acacia aneura    0009           wood_densi… 0.861 mg/m… individual  raw        measurement    unknown    #> 10 Ilic_2000  Acacia aneura    0010           wood_densi… 0.996 mg/m… individual  raw        measurement    unknown    #> # ℹ 2,199 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr> falster_studies <- extract_dataset(austraits, \"Falster\")  falster_studies$traits #> # A tibble: 685 × 26 #>    dataset_id   taxon_name      observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>        <chr>           <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Falster_2003 Acacia floribu… 01             leaf_area  142   mm2   population  mean       measurement    3          #>  2 Falster_2003 Acacia floribu… 01             leaf_incl… 57    deg   population  mean       measurement    3          #>  3 Falster_2003 Acacia floribu… 02             leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  4 Falster_2003 Acacia myrtifo… 03             leaf_area  319   mm2   population  mean       measurement    3          #>  5 Falster_2003 Acacia myrtifo… 03             leaf_incl… 66.1  deg   population  mean       measurement    3          #>  6 Falster_2003 Acacia myrtifo… 04             leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  7 Falster_2003 Acacia suaveol… 05             leaf_area  562   mm2   population  mean       measurement    3          #>  8 Falster_2003 Acacia suaveol… 05             leaf_incl… 71.7  deg   population  mean       measurement    3          #>  9 Falster_2003 Acacia suaveol… 06             leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #> 10 Falster_2003 Angophora hisp… 07             leaf_area  1590  mm2   population  mean       measurement    3          #> # ℹ 675 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extracting-by-taxonomy","dir":"Articles","previous_headings":"Extracting data","what":"Extracting by taxonomy","title":"austraits","text":"","code":"# By family  proteaceae <- extract_taxa(austraits, family = \"Proteaceae\") # Checking that only taxa in Proteaceae have been extracted proteaceae$taxa$family %>% unique() #> [1] \"Proteaceae\" # By genus  acacia <- extract_taxa(austraits, genus = \"Acacia\") # Checking that only taxa in Acacia have been extracted acacia$traits$taxon_name %>% unique() %>% head() #> [1] \"Acacia abbatiana\"                        \"Acacia abbreviata\"                       #> [3] \"Acacia abrupta\"                          \"Acacia acanthaster\"                      #> [5] \"Acacia acanthoclada subsp. acanthoclada\" \"Acacia acanthoclada subsp. glaucescens\" acacia$taxa$genus %>% unique() #> [1] \"Acacia\""},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extracting-by-trait","dir":"Articles","previous_headings":"Extracting data","what":"Extracting by trait","title":"austraits","text":"Combining lookup_trait extract_trait obtain traits ‘leaf’ trait name assigning object. Note use . notation pass lookup_trait results extract_trait","code":"data_fruit <- extract_trait(austraits, \"fruit\")  data_fruit$traits #> # A tibble: 216,465 × 26 #>    dataset_id taxon_name        observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>      <chr>             <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 ABRS_1981  Ceratophyllum de… 0566           fruit_len… 4     mm    species     minimum    measurement    <NA>       #>  2 ABRS_1981  Ceratophyllum de… 0566           fruit_len… 6     mm    species     maximum    measurement    <NA>       #>  3 ABRS_1981  Ceratophyllum de… 0566           fruit_wid… 3     mm    species     minimum    measurement    <NA>       #>  4 ABRS_1981  Ceratophyllum de… 0566           fruit_wid… 3.5   mm    species     maximum    measurement    <NA>       #>  5 ABRS_1981  Conospermum peti… 0680           fruit_len… 2.5   mm    species     minimum    measurement    <NA>       #>  6 ABRS_1981  Conospermum peti… 0680           fruit_wid… 3     mm    species     minimum    measurement    <NA>       #>  7 ABRS_1981  Proiphys amboine… 3182           fruit_len… 15    mm    species     minimum    measurement    <NA>       #>  8 ABRS_1981  Proiphys amboine… 3182           fruit_len… 30    mm    species     maximum    measurement    <NA>       #>  9 ABRS_1981  Proiphys amboine… 3182           fruit_wid… 15    mm    species     minimum    measurement    <NA>       #> 10 ABRS_1981  Proiphys amboine… 3182           fruit_wid… 30    mm    species     maximum    measurement    <NA>       #> # ℹ 216,455 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr> leaf <- lookup_trait(austraits, \"leaf\") %>% extract_trait(austraits, .)   leaf$traits #> # A tibble: 511,952 × 26 #>    dataset_id taxon_name        observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>      <chr>             <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 ABRS_1981  Acanthocarpus ca… 0001           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  2 ABRS_1981  Acanthocarpus hu… 0002           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  3 ABRS_1981  Acanthocarpus pa… 0003           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  4 ABRS_1981  Acanthocarpus pr… 0004           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  5 ABRS_1981  Acanthocarpus ro… 0005           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  6 ABRS_1981  Acanthocarpus ru… 0006           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  7 ABRS_1981  Acanthocarpus ve… 0007           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #>  8 ABRS_1981  Acer pseudoplata… 0008           leaf_phen… deci… <NA>  species     mode       expert_score   <NA>       #>  9 ABRS_1981  Acidonia microca… 0009           leaf_comp… comp… <NA>  species     mode       expert_score   <NA>       #> 10 ABRS_1981  Callitris acumin… 0010           leaf_comp… simp… <NA>  species     mode       expert_score   <NA>       #> # ℹ 511,942 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extract-data","dir":"Articles","previous_headings":"Extracting data","what":"Extracting from other tables","title":"austraits","text":"may want extract data tables specific column values. example calling code return data “fire” mentioned context_property column","code":"data_fire <- extract_data(austraits,                            table =  \"contexts\",                           col =  \"context_property\",                            col_value = \"fire\")  data_fire"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"extracting-from-a-single-table","dir":"Articles","previous_headings":"Extracting data","what":"Extracting from a single table","title":"austraits","text":"already manipulated original database working just traits table, extract functions also work single table.","code":"seedling_data <- extract_data(austraits$traits,                           col =  \"life_stage\",                            col_value = \"seedling\")  Falster_data <- extract_data(austraits$traits,                           col =  \"dataset_id\",                            col_value = \"Falster\")  leaf_data <- extract_trait(austraits$traits,                            c(\"leaf_area\", \"leaf_N_per_dry_mass\"))"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"join-data-from-other-tables","dir":"Articles","previous_headings":"","what":"Join data from other tables","title":"austraits","text":"users extracted data want, may want merge study details main traits dataframe analyses. example, users may require taxonomic information phylogenetic analysis. join_ functions come . five join_ functions total, designed append specific information tables elements austraits object. suffixes refer type information joined, e.g. join_taxa appends taxonomic information traits dataframe. join_taxa() join_methods() join_location_coordinates() join_location_properties() join_context_properties() recommend pulling help file one details e.g ?join_location_coordinates() functions specific default parameters formatting, offers versatile joining options. Alternatively,users can join information using flatten_database():","code":"# Join taxonomic information  (data_fire %>% join_taxa)$traits #> # A tibble: 1,822 × 30 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 20 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, family <chr>, #> #   genus <chr>, taxon_rank <chr>, establishment_means <chr> # Join methodological information  (data_fire %>% join_methods)$traits #> # A tibble: 1,822 × 27 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 17 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, methods <chr> # Join location coordinates  (data_fire %>% join_location_coordinates)$traits #> # A tibble: 1,822 × 29 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 19 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, location_name <chr>, #> #   `latitude (deg)` <chr>, `longitude (deg)` <chr> # Join information pertaining to location properties  (data_fire %>% join_location_properties)$traits #> # A tibble: 1,822 × 28 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 18 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, location_name <chr>, #> #   location_properties <chr> # Join information pertaining to location properties  (data_fire %>% join_location_properties(format = \"many_columns\", vars = \"temperature, min MAT (C)\"))$traits #> # A tibble: 1,822 × 28 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 18 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, location_name <chr>, #> #   `location_property: temperature, min MAT (C)` <chr> # Join context information  (data_fire %>% join_context_properties)$traits #> # A tibble: 1,822 × 31 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 21 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, #> #   treatment_context_properties <chr>, plot_context_properties <chr>, entity_context_properties <chr>, #> #   temporal_context_properties <chr>, method_context_properties <chr> # Join information from multiple tables  (data_fire %>% join_context_properties %>% join_location_coordinates)$traits #> # A tibble: 1,822 × 34 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 24 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, #> #   treatment_context_properties <chr>, plot_context_properties <chr>, entity_context_properties <chr>, #> #   temporal_context_properties <chr>, method_context_properties <chr>, location_name <chr>, … data_fire %>% flatten_database() #> # A tibble: 1,822 × 66 #>    dataset_id    taxon_name     observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>         <chr>          <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Campbell_2006 Acacia falcif… 001            bud_bank_… basa… <NA>  population  mode       expert_score   <NA>       #>  2 Campbell_2006 Acacia falcif… 001            resprouti… resp… <NA>  population  mode       expert_score   <NA>       #>  3 Campbell_2006 Acacia falcif… 001            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #>  4 Campbell_2006 Acacia falcif… 002            post_fire… post… <NA>  population  mode       expert_score   <NA>       #>  5 Campbell_2006 Acacia falcif… 003            dispersers ants  <NA>  species     mode       expert_score   <NA>       #>  6 Campbell_2006 Acacia falcif… 003            plant_gro… tree  <NA>  species     mode       expert_score   <NA>       #>  7 Campbell_2006 Acacia irrora… 004            bud_bank_… none  <NA>  population  mode       expert_score   <NA>       #>  8 Campbell_2006 Acacia irrora… 004            resprouti… fire… <NA>  population  mode       expert_score   <NA>       #>  9 Campbell_2006 Acacia irrora… 004            seedbank_… soil… <NA>  population  mode       expert_score   <NA>       #> 10 Campbell_2006 Acacia irrora… 005            post_fire… post… <NA>  population  mode       expert_score   <NA>       #> # ℹ 1,812 more rows #> # ℹ 56 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>, location_name <chr>, #> #   `latitude (deg)` <chr>, `longitude (deg)` <chr>, location_properties <chr>, treatment_context_properties <chr>, #> #   plot_context_properties <chr>, entity_context_properties <chr>, temporal_context_properties <chr>, …"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"visualising-data-by-site","dir":"Articles","previous_headings":"","what":"Visualising data by site","title":"austraits","text":"plot_locations() graphically summarises trait data collected much data available. legend refers number neighbouring points: warmer colour, data available. function works studies geo-referenced. Users must first use join_location_coordinates() append latitude longitude information locations dataframe traits dataframe plotting. plot_locations() defaults dividing data trait_name (feature = “trait_name”), can select columns within traits table - including columns add join_ functions. However, selecting taxon_name likely crash R working dataframe still contains large number species. plot chunk site_plot","code":"data_fire <- data_fire %>% join_location_coordinates() plot_locations(data_fire$traits)"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"visualising-data-distribution-and-variance","dir":"Articles","previous_headings":"","what":"Visualising data distribution and variance","title":"austraits","text":"plot_trait_distribution() creates histograms beeswarm plots specific traits help users visualise variance data. Users can specify whether create separate beeswarm plots level taxonomic family, genus column traits table, dataset_id plot chunk beeswarm plot chunk beeswarm","code":"austraits %>% plot_trait_distribution_beeswarm(trait_name = \"wood_density\", y_axis_category = \"family\") austraits %>% plot_trait_distribution_beeswarm(trait_name = \"wood_density\", y_axis_category = \"dataset_id\")"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"reshaping-the-traits-table","dir":"Articles","previous_headings":"","what":"Reshaping the traits table","title":"austraits","text":"traits table AusTraits long format, data trait information denoted two columns called trait_name value. can convert wide format, trait separate column, using function trait_pivot_wider(). Note following columns lost pivoting: unit, replicates, measurement_remarks, basis_of_value provide useful output.","code":""},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"pivot-wider","dir":"Articles","previous_headings":"Reshaping the traits table","what":"Pivot wider","title":"austraits","text":"Note latest version trait_pivot_wider() longer supporting AusTraits database versions <=4.0.2. Please refer README install older version austraits R package work old versions AusTraits database.","code":"data_fire %>% trait_pivot_wider() #> # A tibble: 1,366 × 49 #>    dataset_id  taxon_name observation_id entity_type value_type basis_of_record life_stage population_id individual_id #>    <chr>       <chr>      <chr>          <chr>       <chr>      <chr>           <chr>      <chr>         <chr>         #>  1 Campbell_2… Acacia fa… 001            population  mode       field           adult      01            <NA>          #>  2 Campbell_2… Acacia fa… 002            population  mode       field           seedling   01            <NA>          #>  3 Campbell_2… Acacia fa… 003            species     mode       field           adult      <NA>          <NA>          #>  4 Campbell_2… Acacia ir… 004            population  mode       field           adult      01            <NA>          #>  5 Campbell_2… Acacia ir… 005            population  mode       field           seedling   01            <NA>          #>  6 Campbell_2… Acacia ir… 006            species     mode       field           adult      <NA>          <NA>          #>  7 Campbell_2… Acacia ma… 007            population  mode       field           adult      02            <NA>          #>  8 Campbell_2… Acacia ma… 008            population  mode       field           seedling   02            <NA>          #>  9 Campbell_2… Acacia ma… 009            species     mode       field           adult      <NA>          <NA>          #> 10 Campbell_2… Acacia me… 010            population  mode       field           adult      02            <NA>          #> # ℹ 1,356 more rows #> # ℹ 40 more variables: repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   method_id <chr>, method_context_id <chr>, original_name <chr>, location_name <chr>, `latitude (deg)` <chr>, #> #   `longitude (deg)` <chr>, bud_bank_location <chr>, resprouting_capacity <chr>, seedbank_location <chr>, #> #   post_fire_recruitment <chr>, dispersers <chr>, plant_growth_form <chr>, stem_dark_respiration_per_area <chr>, #> #   bark_thickness <chr>, huber_value <chr>, leaf_dry_matter_content <chr>, leaf_dark_respiration_per_area <chr>, …"},{"path":"https://traitecoevo.github.io/austraits/articles/austraits.html","id":"binding-trait-values","dir":"Articles","previous_headings":"Reshaping the traits table","what":"Binding trait values","title":"austraits","text":"datasets multiple observations traits, instance datasets floras often report minimum maximum fruit length species. can use bind_trait_values merge single cell. like revert bounded trait values, call separate_trait_values():","code":"data_fruit <- austraits %>%    extract_trait(\"fruit_length\") %>%    extract_taxa(family = \"Rutaceae\") %>%    extract_data(table = \"traits\", col = \"value_type\", col_value = c(\"minimum\", \"maximum\"))  data_trait_bound <- data_fruit$traits %>%   bind_trait_values() # Joining multiple obs with `--`    data_trait_bound  %>%      dplyr::filter(stringr::str_detect(value, \"--\")) #> # A tibble: 288 × 26 #>    dataset_id taxon_name        observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>      <chr>             <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 ABRS_2023  Acronychia aberr… 01324          fruit_len… 13--… mm    species     minimum--… measurement--… NA--NA     #>  2 ABRS_2023  Acronychia acidu… 01325          fruit_len… 13--… mm    species     minimum--… measurement--… NA--NA     #>  3 ABRS_2023  Acronychia acron… 01326          fruit_len… 8--13 mm    species     minimum--… measurement--… NA--NA     #>  4 ABRS_2023  Acronychia acumi… 01327          fruit_len… 12--… mm    species     minimum--… measurement--… NA--NA     #>  5 ABRS_2023  Acronychia baeue… 01328          fruit_len… 10--… mm    species     minimum--… measurement--… NA--NA     #>  6 ABRS_2023  Acronychia choor… 01329          fruit_len… 10--… mm    species     minimum--… measurement--… NA--NA     #>  7 ABRS_2023  Acronychia crass… 01330          fruit_len… 10--… mm    species     minimum--… measurement--… NA--NA     #>  8 ABRS_2023  Acronychia imper… 01332          fruit_len… 9--16 mm    species     minimum--… measurement--… NA--NA     #>  9 ABRS_2023  Acronychia laevis 01333          fruit_len… 7--10 mm    species     minimum--… measurement--… NA--NA     #> 10 ABRS_2023  Acronychia litto… 01334          fruit_len… 8--14 mm    species     minimum--… measurement--… NA--NA     #> # ℹ 278 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr> data_trait_bound %>%    separate_trait_values(., austraits$definitions) #> # A tibble: 119 × 26 #>    dataset_id  taxon_name       observation_id trait_name value unit  entity_type value_type basis_of_value replicates #>    <chr>       <chr>            <chr>          <chr>      <chr> <chr> <chr>       <chr>      <chr>          <chr>      #>  1 Cooper_2013 Acronychia baeu… 0071           fruit_len… 15    mm    species     maximum    measurement    <NA>       #>  2 ABRS_2023   Acronychia aber… 01324          fruit_len… 16    mm    species     maximum    measurement    <NA>       #>  3 ABRS_2023   Acronychia aber… 01324          fruit_len… 13    mm    species     minimum    measurement    <NA>       #>  4 ABRS_2023   Acronychia eung… 01331          fruit_len… 12    mm    species     maximum    measurement    <NA>       #>  5 ABRS_2023   Asterolasia ele… 02248          fruit_len… 10    mm    species     maximum    measurement    <NA>       #>  6 ABRS_2023   Boronia angusti… 02910          fruit_len… 6     mm    species     maximum    measurement    <NA>       #>  7 ABRS_2023   Boronia quadril… 03056          fruit_len… 6     mm    species     maximum    measurement    <NA>       #>  8 ABRS_2023   Bosistoa floydii 03120          fruit_len… 10    mm    species     maximum    measurement    <NA>       #>  9 ABRS_2023   Citrus australa… 04176          fruit_len… 50    mm    species     maximum    measurement    <NA>       #> 10 ABRS_2023   Citrus garrawayi 04178          fruit_len… 100   mm    species     maximum    measurement    <NA>       #> # ℹ 109 more rows #> # ℹ 16 more variables: basis_of_record <chr>, life_stage <chr>, population_id <chr>, individual_id <chr>, #> #   repeat_measurements_id <chr>, temporal_context_id <chr>, source_id <chr>, location_id <chr>, #> #   entity_context_id <chr>, plot_context_id <chr>, treatment_context_id <chr>, collection_date <chr>, #> #   measurement_remarks <chr>, method_id <chr>, method_context_id <chr>, original_name <chr>"},{"path":"https://traitecoevo.github.io/austraits/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Falster. Author. Elizabeth Wenk. Contributor. Fonti Kar. Author, maintainer. Dony Indiarto. Author.","code":""},{"path":"https://traitecoevo.github.io/austraits/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Falster, D., Gallagher, R., Wenk, E.H. et al. AusTraits, curated plant trait database Australian flora. Sci Data 8, 254 (2021). https://doi.org/10.1038/s41597-021-01006-6","code":"@Article{,   title = {AusTraits, a curated plant trait database for the Australian flora},   author = {Daniel Falster and Rachael Gallagher and Elizabeth Wenk et al.},   journal = {Scientific Data},   year = {2021},   volume = {8},   number = {1},   pages = {254 - 274},   url = {https://doi.org/10.1038/s41597-021-01006-6}, }"},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"austraits-","dir":"","previous_headings":"","what":"An R package for accessing the AusTraits database","title":"An R package for accessing the AusTraits database","text":"austraits allow users access, explore wrangle data traits.build relational databases. also R interface AusTraits, Australian plant trait database. package contains functions joining data various tables, filtering specific records, combining multiple databases visualising distribution data. expect package assist users working traits.build databases.","code":""},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for accessing the AusTraits database","text":"package CRAN yet still active development. current stable release austraits, full capabilities functions used vignettes (e.g. plotting functions), use: lightweight installation dependencies plotting producing vignettes installed, use:","code":"#install.packages(\"remotes\") remotes::install_github(\"traitecoevo/austraits\", dependencies = TRUE, upgrade = \"ask\")  library(austraits) remotes::install_github(\"traitecoevo/austraits\", upgrade = \"ask\")"},{"path":[]},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"retrieve-austraits-data","dir":"","previous_headings":"Details for AusTraits users","what":"Retrieve AusTraits data","title":"An R package for accessing the AusTraits database","text":"R users, AusTraits database can accessed austraits package using load_austraits() Python users, Zenodo download includes .zip file containing data plain text (.csv files) associated meta-data","code":""},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"backwards-compatibility-with-past-austraits-versions","dir":"","previous_headings":"Details for AusTraits users","what":"Backwards compatibility with past AusTraits versions","title":"An R package for accessing the AusTraits database","text":"September 2024, austraits functions revamped support traits.build compiled databases, rather linked austraits.build. Versions austraits.build (AusTraits plant trait database) < 5.0 longer supported latest version package. working older version AusTraits, please install older version austraits: austraits.build versions 4.2 older: Note, unsure version AusTraits working , run:","code":"#install.packages(\"remotes\") remotes::install_github(\"traitecoevo/austraits@v2.2.2\", dependencies = TRUE, upgrade = \"ask\")  library(austraits) austraits$build_info$version"},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"getting-started-","dir":"","previous_headings":"","what":"Getting started 👀","title":"An R package for accessing the AusTraits database","text":"highly recommend taking look Getting Started tutorial website jumping austraits R package! prefer view vignette R, recommend installing package build_vignettes = TRUE.","code":"remotes::install_github(\"traitecoevo/austraits\",                          dependencies = TRUE, upgrade = \"ask\",                          build_vignettes = TRUE)  vignette(\"austraits\")"},{"path":[]},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"learn-more-about-austraits","dir":"","previous_headings":"","what":"Learn more about AusTraits","title":"An R package for accessing the AusTraits database","text":"AusTraits relational database, can learn ’s structure traits.build book. can also learn definitions plant trait AusTraits Plant Dictionary!","code":""},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"show-us-some-support-","dir":"","previous_headings":"","what":"Show us some support 💚","title":"An R package for accessing the AusTraits database","text":"Please consider citing austraits, super appreciate !","code":"citation(\"austraits\") #> To cite austraits in publications use: #>  #>   Falster, D., Gallagher, R., Wenk, E.H. et al. AusTraits, a curated #>   plant trait database for the Australian flora. Sci Data 8, 254 #>   (2021). https://doi.org/10.1038/s41597-021-01006-6 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {AusTraits, a curated plant trait database for the Australian flora}, #>     author = {Daniel Falster and Rachael Gallagher and Elizabeth Wenk et al.}, #>     journal = {Scientific Data}, #>     year = {2021}, #>     volume = {8}, #>     number = {1}, #>     pages = {254 - 274}, #>     url = {https://doi.org/10.1038/s41597-021-01006-6}, #>   }"},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"behind-the-scenes-","dir":"","previous_headings":"","what":"Behind the scenes 🛠","title":"An R package for accessing the AusTraits database","text":"Check austraits.build, interested AusTraits database managed created","code":""},{"path":"https://traitecoevo.github.io/austraits/index.html","id":"find-a-bug-","dir":"","previous_headings":"","what":"Find a bug? 🐛","title":"An R package for accessing the AusTraits database","text":"Thank finding ! Head GitHub Issues tab let us know ! try get soon can!","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/as_wide_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single wide table from a traits.build data object — as_wide_table","title":"Create a single wide table from a traits.build data object — as_wide_table","text":"Create single wide table traits.build data object","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/as_wide_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single wide table from a traits.build data object — as_wide_table","text":"","code":"as_wide_table(database)"},{"path":"https://traitecoevo.github.io/austraits/reference/as_wide_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single wide table from a traits.build data object — as_wide_table","text":"database traits.build database (list object)","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/as_wide_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a single wide table from a traits.build data object — as_wide_table","text":"single wide table collapsed contexts locations text cols renamed alignment resources","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/as_wide_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a single wide table from a traits.build data object — as_wide_table","text":"","code":"if (FALSE) { # \\dontrun{ austraits %>% as_wide_table() } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/austraits-package.html","id":null,"dir":"Reference","previous_headings":"","what":"austraits: Helpful functions to access the AusTraits database and wrangle data from other traits.build databases — austraits-package","title":"austraits: Helpful functions to access the AusTraits database and wrangle data from other traits.build databases — austraits-package","text":"`austraits` allow users **access, explore wrangle data** traits.build relational databases. also R interface AusTraits, Australian plant trait database. package contains functions joining data various tables, filtering specific records, combining multiple databases visualising distribution data. expect package assist users working `traits.build` databases.","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/austraits/reference/austraits-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"austraits: Helpful functions to access the AusTraits database and wrangle data from other traits.build databases — austraits-package","text":"Maintainer: Fonti Kar f.kar@unsw.edu.au (ORCID) Authors: Daniel Falster daniel.falster@unsw.edu.au (ORCID) Dony Indiarto (ORCID) contributors: Elizabeth Wenk e.wenk@unsw.edu.au (ORCID) [contributor]","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_databases.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind multiple traits.build data objects into a single data object — bind_databases","title":"Bind multiple traits.build data objects into a single data object — bind_databases","text":"bind_databases binds listed studies single traits.build database object large list.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_databases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind multiple traits.build data objects into a single data object — bind_databases","text":"","code":"bind_databases(..., databases = list(...))"},{"path":"https://traitecoevo.github.io/austraits/reference/bind_databases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind multiple traits.build data objects into a single data object — bind_databases","text":"... Arguments passed functions databases List traits.build databases bond together","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_databases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind multiple traits.build data objects into a single data object — bind_databases","text":"Compiled database single large list","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind trait values — bind_trait_values","title":"Bind trait values — bind_trait_values","text":"function condenses data studies multiple observations given trait single row. function concatenates multiple values single cell","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind trait values — bind_trait_values","text":"","code":"bind_trait_values(trait_data)"},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind trait values — bind_trait_values","text":"trait_data traits table traits.build database – see example","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind trait values — bind_trait_values","text":"tibble condensed multiple observations value, value_type replicates collapsed separated '–'","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bind trait values — bind_trait_values","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/bind_trait_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind trait values — bind_trait_values","text":"","code":"if (FALSE) { # \\dontrun{ traits <- austraits$traits %>%  dplyr::filter(dataset_id == \"ABRS_1981\") traits traits_bind <- bind_trait_values(traits) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Check compatibility of traits.build object — check_compatibility","title":"Check compatibility of traits.build object — check_compatibility","text":"Function check whether data object compiled traits.build workflow therefore data structure appropriate use austraits functions.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check compatibility of traits.build object — check_compatibility","text":"","code":"check_compatibility(database, single_table_allowed = FALSE)"},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check compatibility of traits.build object — check_compatibility","text":"database traits.build database (list object) single_table_allowed logical input might single table instead complete database; defaults FALSE","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check compatibility of traits.build object — check_compatibility","text":"logical (T/F) output messaging uncompatible versions","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check compatibility of traits.build object — check_compatibility","text":"Elizabeth Wenk - e.wenk@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_compatibility.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check compatibility of traits.build object — check_compatibility","text":"","code":"if (FALSE) { # \\dontrun{ check_compatibility(database) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/check_traits_compatibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Check compatibility of traits table — check_traits_compatibility","title":"Check compatibility of traits table — check_traits_compatibility","text":"Check compatibility traits table","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_traits_compatibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check compatibility of traits table — check_traits_compatibility","text":"","code":"check_traits_compatibility(trait_data)"},{"path":"https://traitecoevo.github.io/austraits/reference/check_traits_compatibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check compatibility of traits table — check_traits_compatibility","text":"trait_data traits table traits.build database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/check_traits_compatibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check compatibility of traits table — check_traits_compatibility","text":"logical, TRUE indicating version traits table came traits.build version > 1.0","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_df_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert dataframe to list — convert_df_to_list","title":"Convert dataframe to list — convert_df_to_list","text":"Convert dataframe named list, useful converting dataframe yaml.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_df_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert dataframe to list — convert_df_to_list","text":"","code":"convert_df_to_list(df)"},{"path":"https://traitecoevo.github.io/austraits/reference/convert_df_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert dataframe to list — convert_df_to_list","text":"df dataframe","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_df_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert dataframe to list — convert_df_to_list","text":"(yaml) list","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_df_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert dataframe to list — convert_df_to_list","text":"","code":"convert_df_to_list(dplyr::starwars) #> [[1]] #> [[1]]$name #> [1] \"Luke Skywalker\" #>  #> [[1]]$height #> [1] 172 #>  #> [[1]]$mass #> [1] 77 #>  #> [[1]]$hair_color #> [1] \"blond\" #>  #> [[1]]$skin_color #> [1] \"fair\" #>  #> [[1]]$eye_color #> [1] \"blue\" #>  #> [[1]]$birth_year #> [1] 19 #>  #> [[1]]$sex #> [1] \"male\" #>  #> [[1]]$gender #> [1] \"masculine\" #>  #> [[1]]$homeworld #> [1] \"Tatooine\" #>  #> [[1]]$species #> [1] \"Human\" #>  #> [[1]]$films #> [[1]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"Revenge of the Sith\"     #> [5] \"The Force Awakens\"       #>  #>  #> [[1]]$vehicles #> [[1]]$vehicles[[1]] #> [1] \"Snowspeeder\"           \"Imperial Speeder Bike\" #>  #>  #> [[1]]$starships #> [[1]]$starships[[1]] #> [1] \"X-wing\"           \"Imperial shuttle\" #>  #>  #>  #> [[2]] #> [[2]]$name #> [1] \"C-3PO\" #>  #> [[2]]$height #> [1] 167 #>  #> [[2]]$mass #> [1] 75 #>  #> [[2]]$hair_color #> [1] NA #>  #> [[2]]$skin_color #> [1] \"gold\" #>  #> [[2]]$eye_color #> [1] \"yellow\" #>  #> [[2]]$birth_year #> [1] 112 #>  #> [[2]]$sex #> [1] \"none\" #>  #> [[2]]$gender #> [1] \"masculine\" #>  #> [[2]]$homeworld #> [1] \"Tatooine\" #>  #> [[2]]$species #> [1] \"Droid\" #>  #> [[2]]$films #> [[2]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"The Phantom Menace\"      #> [5] \"Attack of the Clones\"    \"Revenge of the Sith\"     #>  #>  #> [[2]]$vehicles #> [[2]]$vehicles[[1]] #> character(0) #>  #>  #> [[2]]$starships #> [[2]]$starships[[1]] #> character(0) #>  #>  #>  #> [[3]] #> [[3]]$name #> [1] \"R2-D2\" #>  #> [[3]]$height #> [1] 96 #>  #> [[3]]$mass #> [1] 32 #>  #> [[3]]$hair_color #> [1] NA #>  #> [[3]]$skin_color #> [1] \"white, blue\" #>  #> [[3]]$eye_color #> [1] \"red\" #>  #> [[3]]$birth_year #> [1] 33 #>  #> [[3]]$sex #> [1] \"none\" #>  #> [[3]]$gender #> [1] \"masculine\" #>  #> [[3]]$homeworld #> [1] \"Naboo\" #>  #> [[3]]$species #> [1] \"Droid\" #>  #> [[3]]$films #> [[3]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"The Phantom Menace\"      #> [5] \"Attack of the Clones\"    \"Revenge of the Sith\"     #> [7] \"The Force Awakens\"       #>  #>  #> [[3]]$vehicles #> [[3]]$vehicles[[1]] #> character(0) #>  #>  #> [[3]]$starships #> [[3]]$starships[[1]] #> character(0) #>  #>  #>  #> [[4]] #> [[4]]$name #> [1] \"Darth Vader\" #>  #> [[4]]$height #> [1] 202 #>  #> [[4]]$mass #> [1] 136 #>  #> [[4]]$hair_color #> [1] \"none\" #>  #> [[4]]$skin_color #> [1] \"white\" #>  #> [[4]]$eye_color #> [1] \"yellow\" #>  #> [[4]]$birth_year #> [1] 41.9 #>  #> [[4]]$sex #> [1] \"male\" #>  #> [[4]]$gender #> [1] \"masculine\" #>  #> [[4]]$homeworld #> [1] \"Tatooine\" #>  #> [[4]]$species #> [1] \"Human\" #>  #> [[4]]$films #> [[4]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"Revenge of the Sith\"     #>  #>  #> [[4]]$vehicles #> [[4]]$vehicles[[1]] #> character(0) #>  #>  #> [[4]]$starships #> [[4]]$starships[[1]] #> [1] \"TIE Advanced x1\" #>  #>  #>  #> [[5]] #> [[5]]$name #> [1] \"Leia Organa\" #>  #> [[5]]$height #> [1] 150 #>  #> [[5]]$mass #> [1] 49 #>  #> [[5]]$hair_color #> [1] \"brown\" #>  #> [[5]]$skin_color #> [1] \"light\" #>  #> [[5]]$eye_color #> [1] \"brown\" #>  #> [[5]]$birth_year #> [1] 19 #>  #> [[5]]$sex #> [1] \"female\" #>  #> [[5]]$gender #> [1] \"feminine\" #>  #> [[5]]$homeworld #> [1] \"Alderaan\" #>  #> [[5]]$species #> [1] \"Human\" #>  #> [[5]]$films #> [[5]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"Revenge of the Sith\"     #> [5] \"The Force Awakens\"       #>  #>  #> [[5]]$vehicles #> [[5]]$vehicles[[1]] #> [1] \"Imperial Speeder Bike\" #>  #>  #> [[5]]$starships #> [[5]]$starships[[1]] #> character(0) #>  #>  #>  #> [[6]] #> [[6]]$name #> [1] \"Owen Lars\" #>  #> [[6]]$height #> [1] 178 #>  #> [[6]]$mass #> [1] 120 #>  #> [[6]]$hair_color #> [1] \"brown, grey\" #>  #> [[6]]$skin_color #> [1] \"light\" #>  #> [[6]]$eye_color #> [1] \"blue\" #>  #> [[6]]$birth_year #> [1] 52 #>  #> [[6]]$sex #> [1] \"male\" #>  #> [[6]]$gender #> [1] \"masculine\" #>  #> [[6]]$homeworld #> [1] \"Tatooine\" #>  #> [[6]]$species #> [1] \"Human\" #>  #> [[6]]$films #> [[6]]$films[[1]] #> [1] \"A New Hope\"           \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[6]]$vehicles #> [[6]]$vehicles[[1]] #> character(0) #>  #>  #> [[6]]$starships #> [[6]]$starships[[1]] #> character(0) #>  #>  #>  #> [[7]] #> [[7]]$name #> [1] \"Beru Whitesun Lars\" #>  #> [[7]]$height #> [1] 165 #>  #> [[7]]$mass #> [1] 75 #>  #> [[7]]$hair_color #> [1] \"brown\" #>  #> [[7]]$skin_color #> [1] \"light\" #>  #> [[7]]$eye_color #> [1] \"blue\" #>  #> [[7]]$birth_year #> [1] 47 #>  #> [[7]]$sex #> [1] \"female\" #>  #> [[7]]$gender #> [1] \"feminine\" #>  #> [[7]]$homeworld #> [1] \"Tatooine\" #>  #> [[7]]$species #> [1] \"Human\" #>  #> [[7]]$films #> [[7]]$films[[1]] #> [1] \"A New Hope\"           \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[7]]$vehicles #> [[7]]$vehicles[[1]] #> character(0) #>  #>  #> [[7]]$starships #> [[7]]$starships[[1]] #> character(0) #>  #>  #>  #> [[8]] #> [[8]]$name #> [1] \"R5-D4\" #>  #> [[8]]$height #> [1] 97 #>  #> [[8]]$mass #> [1] 32 #>  #> [[8]]$hair_color #> [1] NA #>  #> [[8]]$skin_color #> [1] \"white, red\" #>  #> [[8]]$eye_color #> [1] \"red\" #>  #> [[8]]$birth_year #> [1] NA #>  #> [[8]]$sex #> [1] \"none\" #>  #> [[8]]$gender #> [1] \"masculine\" #>  #> [[8]]$homeworld #> [1] \"Tatooine\" #>  #> [[8]]$species #> [1] \"Droid\" #>  #> [[8]]$films #> [[8]]$films[[1]] #> [1] \"A New Hope\" #>  #>  #> [[8]]$vehicles #> [[8]]$vehicles[[1]] #> character(0) #>  #>  #> [[8]]$starships #> [[8]]$starships[[1]] #> character(0) #>  #>  #>  #> [[9]] #> [[9]]$name #> [1] \"Biggs Darklighter\" #>  #> [[9]]$height #> [1] 183 #>  #> [[9]]$mass #> [1] 84 #>  #> [[9]]$hair_color #> [1] \"black\" #>  #> [[9]]$skin_color #> [1] \"light\" #>  #> [[9]]$eye_color #> [1] \"brown\" #>  #> [[9]]$birth_year #> [1] 24 #>  #> [[9]]$sex #> [1] \"male\" #>  #> [[9]]$gender #> [1] \"masculine\" #>  #> [[9]]$homeworld #> [1] \"Tatooine\" #>  #> [[9]]$species #> [1] \"Human\" #>  #> [[9]]$films #> [[9]]$films[[1]] #> [1] \"A New Hope\" #>  #>  #> [[9]]$vehicles #> [[9]]$vehicles[[1]] #> character(0) #>  #>  #> [[9]]$starships #> [[9]]$starships[[1]] #> [1] \"X-wing\" #>  #>  #>  #> [[10]] #> [[10]]$name #> [1] \"Obi-Wan Kenobi\" #>  #> [[10]]$height #> [1] 182 #>  #> [[10]]$mass #> [1] 77 #>  #> [[10]]$hair_color #> [1] \"auburn, white\" #>  #> [[10]]$skin_color #> [1] \"fair\" #>  #> [[10]]$eye_color #> [1] \"blue-gray\" #>  #> [[10]]$birth_year #> [1] 57 #>  #> [[10]]$sex #> [1] \"male\" #>  #> [[10]]$gender #> [1] \"masculine\" #>  #> [[10]]$homeworld #> [1] \"Stewjon\" #>  #> [[10]]$species #> [1] \"Human\" #>  #> [[10]]$films #> [[10]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"The Phantom Menace\"      #> [5] \"Attack of the Clones\"    \"Revenge of the Sith\"     #>  #>  #> [[10]]$vehicles #> [[10]]$vehicles[[1]] #> [1] \"Tribubble bongo\" #>  #>  #> [[10]]$starships #> [[10]]$starships[[1]] #> [1] \"Jedi starfighter\"         \"Trade Federation cruiser\" #> [3] \"Naboo star skiff\"         \"Jedi Interceptor\"         #> [5] \"Belbullab-22 starfighter\" #>  #>  #>  #> [[11]] #> [[11]]$name #> [1] \"Anakin Skywalker\" #>  #> [[11]]$height #> [1] 188 #>  #> [[11]]$mass #> [1] 84 #>  #> [[11]]$hair_color #> [1] \"blond\" #>  #> [[11]]$skin_color #> [1] \"fair\" #>  #> [[11]]$eye_color #> [1] \"blue\" #>  #> [[11]]$birth_year #> [1] 41.9 #>  #> [[11]]$sex #> [1] \"male\" #>  #> [[11]]$gender #> [1] \"masculine\" #>  #> [[11]]$homeworld #> [1] \"Tatooine\" #>  #> [[11]]$species #> [1] \"Human\" #>  #> [[11]]$films #> [[11]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[11]]$vehicles #> [[11]]$vehicles[[1]] #> [1] \"Zephyr-G swoop bike\" \"XJ-6 airspeeder\"     #>  #>  #> [[11]]$starships #> [[11]]$starships[[1]] #> [1] \"Naboo fighter\"            \"Trade Federation cruiser\" #> [3] \"Jedi Interceptor\"         #>  #>  #>  #> [[12]] #> [[12]]$name #> [1] \"Wilhuff Tarkin\" #>  #> [[12]]$height #> [1] 180 #>  #> [[12]]$mass #> [1] NA #>  #> [[12]]$hair_color #> [1] \"auburn, grey\" #>  #> [[12]]$skin_color #> [1] \"fair\" #>  #> [[12]]$eye_color #> [1] \"blue\" #>  #> [[12]]$birth_year #> [1] 64 #>  #> [[12]]$sex #> [1] \"male\" #>  #> [[12]]$gender #> [1] \"masculine\" #>  #> [[12]]$homeworld #> [1] \"Eriadu\" #>  #> [[12]]$species #> [1] \"Human\" #>  #> [[12]]$films #> [[12]]$films[[1]] #> [1] \"A New Hope\"          \"Revenge of the Sith\" #>  #>  #> [[12]]$vehicles #> [[12]]$vehicles[[1]] #> character(0) #>  #>  #> [[12]]$starships #> [[12]]$starships[[1]] #> character(0) #>  #>  #>  #> [[13]] #> [[13]]$name #> [1] \"Chewbacca\" #>  #> [[13]]$height #> [1] 228 #>  #> [[13]]$mass #> [1] 112 #>  #> [[13]]$hair_color #> [1] \"brown\" #>  #> [[13]]$skin_color #> [1] \"unknown\" #>  #> [[13]]$eye_color #> [1] \"blue\" #>  #> [[13]]$birth_year #> [1] 200 #>  #> [[13]]$sex #> [1] \"male\" #>  #> [[13]]$gender #> [1] \"masculine\" #>  #> [[13]]$homeworld #> [1] \"Kashyyyk\" #>  #> [[13]]$species #> [1] \"Wookiee\" #>  #> [[13]]$films #> [[13]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"Revenge of the Sith\"     #> [5] \"The Force Awakens\"       #>  #>  #> [[13]]$vehicles #> [[13]]$vehicles[[1]] #> [1] \"AT-ST\" #>  #>  #> [[13]]$starships #> [[13]]$starships[[1]] #> [1] \"Millennium Falcon\" \"Imperial shuttle\"  #>  #>  #>  #> [[14]] #> [[14]]$name #> [1] \"Han Solo\" #>  #> [[14]]$height #> [1] 180 #>  #> [[14]]$mass #> [1] 80 #>  #> [[14]]$hair_color #> [1] \"brown\" #>  #> [[14]]$skin_color #> [1] \"fair\" #>  #> [[14]]$eye_color #> [1] \"brown\" #>  #> [[14]]$birth_year #> [1] 29 #>  #> [[14]]$sex #> [1] \"male\" #>  #> [[14]]$gender #> [1] \"masculine\" #>  #> [[14]]$homeworld #> [1] \"Corellia\" #>  #> [[14]]$species #> [1] \"Human\" #>  #> [[14]]$films #> [[14]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      \"The Force Awakens\"       #>  #>  #> [[14]]$vehicles #> [[14]]$vehicles[[1]] #> character(0) #>  #>  #> [[14]]$starships #> [[14]]$starships[[1]] #> [1] \"Millennium Falcon\" \"Imperial shuttle\"  #>  #>  #>  #> [[15]] #> [[15]]$name #> [1] \"Greedo\" #>  #> [[15]]$height #> [1] 173 #>  #> [[15]]$mass #> [1] 74 #>  #> [[15]]$hair_color #> [1] NA #>  #> [[15]]$skin_color #> [1] \"green\" #>  #> [[15]]$eye_color #> [1] \"black\" #>  #> [[15]]$birth_year #> [1] 44 #>  #> [[15]]$sex #> [1] \"male\" #>  #> [[15]]$gender #> [1] \"masculine\" #>  #> [[15]]$homeworld #> [1] \"Rodia\" #>  #> [[15]]$species #> [1] \"Rodian\" #>  #> [[15]]$films #> [[15]]$films[[1]] #> [1] \"A New Hope\" #>  #>  #> [[15]]$vehicles #> [[15]]$vehicles[[1]] #> character(0) #>  #>  #> [[15]]$starships #> [[15]]$starships[[1]] #> character(0) #>  #>  #>  #> [[16]] #> [[16]]$name #> [1] \"Jabba Desilijic Tiure\" #>  #> [[16]]$height #> [1] 175 #>  #> [[16]]$mass #> [1] 1358 #>  #> [[16]]$hair_color #> [1] NA #>  #> [[16]]$skin_color #> [1] \"green-tan, brown\" #>  #> [[16]]$eye_color #> [1] \"orange\" #>  #> [[16]]$birth_year #> [1] 600 #>  #> [[16]]$sex #> [1] \"hermaphroditic\" #>  #> [[16]]$gender #> [1] \"masculine\" #>  #> [[16]]$homeworld #> [1] \"Nal Hutta\" #>  #> [[16]]$species #> [1] \"Hutt\" #>  #> [[16]]$films #> [[16]]$films[[1]] #> [1] \"A New Hope\"         \"Return of the Jedi\" \"The Phantom Menace\" #>  #>  #> [[16]]$vehicles #> [[16]]$vehicles[[1]] #> character(0) #>  #>  #> [[16]]$starships #> [[16]]$starships[[1]] #> character(0) #>  #>  #>  #> [[17]] #> [[17]]$name #> [1] \"Wedge Antilles\" #>  #> [[17]]$height #> [1] 170 #>  #> [[17]]$mass #> [1] 77 #>  #> [[17]]$hair_color #> [1] \"brown\" #>  #> [[17]]$skin_color #> [1] \"fair\" #>  #> [[17]]$eye_color #> [1] \"hazel\" #>  #> [[17]]$birth_year #> [1] 21 #>  #> [[17]]$sex #> [1] \"male\" #>  #> [[17]]$gender #> [1] \"masculine\" #>  #> [[17]]$homeworld #> [1] \"Corellia\" #>  #> [[17]]$species #> [1] \"Human\" #>  #> [[17]]$films #> [[17]]$films[[1]] #> [1] \"A New Hope\"              \"The Empire Strikes Back\" #> [3] \"Return of the Jedi\"      #>  #>  #> [[17]]$vehicles #> [[17]]$vehicles[[1]] #> [1] \"Snowspeeder\" #>  #>  #> [[17]]$starships #> [[17]]$starships[[1]] #> [1] \"X-wing\" #>  #>  #>  #> [[18]] #> [[18]]$name #> [1] \"Jek Tono Porkins\" #>  #> [[18]]$height #> [1] 180 #>  #> [[18]]$mass #> [1] 110 #>  #> [[18]]$hair_color #> [1] \"brown\" #>  #> [[18]]$skin_color #> [1] \"fair\" #>  #> [[18]]$eye_color #> [1] \"blue\" #>  #> [[18]]$birth_year #> [1] NA #>  #> [[18]]$sex #> [1] NA #>  #> [[18]]$gender #> [1] NA #>  #> [[18]]$homeworld #> [1] \"Bestine IV\" #>  #> [[18]]$species #> [1] NA #>  #> [[18]]$films #> [[18]]$films[[1]] #> [1] \"A New Hope\" #>  #>  #> [[18]]$vehicles #> [[18]]$vehicles[[1]] #> character(0) #>  #>  #> [[18]]$starships #> [[18]]$starships[[1]] #> [1] \"X-wing\" #>  #>  #>  #> [[19]] #> [[19]]$name #> [1] \"Yoda\" #>  #> [[19]]$height #> [1] 66 #>  #> [[19]]$mass #> [1] 17 #>  #> [[19]]$hair_color #> [1] \"white\" #>  #> [[19]]$skin_color #> [1] \"green\" #>  #> [[19]]$eye_color #> [1] \"brown\" #>  #> [[19]]$birth_year #> [1] 896 #>  #> [[19]]$sex #> [1] \"male\" #>  #> [[19]]$gender #> [1] \"masculine\" #>  #> [[19]]$homeworld #> [1] NA #>  #> [[19]]$species #> [1] \"Yoda's species\" #>  #> [[19]]$films #> [[19]]$films[[1]] #> [1] \"The Empire Strikes Back\" \"Return of the Jedi\"      #> [3] \"The Phantom Menace\"      \"Attack of the Clones\"    #> [5] \"Revenge of the Sith\"     #>  #>  #> [[19]]$vehicles #> [[19]]$vehicles[[1]] #> character(0) #>  #>  #> [[19]]$starships #> [[19]]$starships[[1]] #> character(0) #>  #>  #>  #> [[20]] #> [[20]]$name #> [1] \"Palpatine\" #>  #> [[20]]$height #> [1] 170 #>  #> [[20]]$mass #> [1] 75 #>  #> [[20]]$hair_color #> [1] \"grey\" #>  #> [[20]]$skin_color #> [1] \"pale\" #>  #> [[20]]$eye_color #> [1] \"yellow\" #>  #> [[20]]$birth_year #> [1] 82 #>  #> [[20]]$sex #> [1] \"male\" #>  #> [[20]]$gender #> [1] \"masculine\" #>  #> [[20]]$homeworld #> [1] \"Naboo\" #>  #> [[20]]$species #> [1] \"Human\" #>  #> [[20]]$films #> [[20]]$films[[1]] #> [1] \"The Empire Strikes Back\" \"Return of the Jedi\"      #> [3] \"The Phantom Menace\"      \"Attack of the Clones\"    #> [5] \"Revenge of the Sith\"     #>  #>  #> [[20]]$vehicles #> [[20]]$vehicles[[1]] #> character(0) #>  #>  #> [[20]]$starships #> [[20]]$starships[[1]] #> character(0) #>  #>  #>  #> [[21]] #> [[21]]$name #> [1] \"Boba Fett\" #>  #> [[21]]$height #> [1] 183 #>  #> [[21]]$mass #> [1] 78.2 #>  #> [[21]]$hair_color #> [1] \"black\" #>  #> [[21]]$skin_color #> [1] \"fair\" #>  #> [[21]]$eye_color #> [1] \"brown\" #>  #> [[21]]$birth_year #> [1] 31.5 #>  #> [[21]]$sex #> [1] \"male\" #>  #> [[21]]$gender #> [1] \"masculine\" #>  #> [[21]]$homeworld #> [1] \"Kamino\" #>  #> [[21]]$species #> [1] \"Human\" #>  #> [[21]]$films #> [[21]]$films[[1]] #> [1] \"The Empire Strikes Back\" \"Return of the Jedi\"      #> [3] \"Attack of the Clones\"    #>  #>  #> [[21]]$vehicles #> [[21]]$vehicles[[1]] #> character(0) #>  #>  #> [[21]]$starships #> [[21]]$starships[[1]] #> [1] \"Slave 1\" #>  #>  #>  #> [[22]] #> [[22]]$name #> [1] \"IG-88\" #>  #> [[22]]$height #> [1] 200 #>  #> [[22]]$mass #> [1] 140 #>  #> [[22]]$hair_color #> [1] \"none\" #>  #> [[22]]$skin_color #> [1] \"metal\" #>  #> [[22]]$eye_color #> [1] \"red\" #>  #> [[22]]$birth_year #> [1] 15 #>  #> [[22]]$sex #> [1] \"none\" #>  #> [[22]]$gender #> [1] \"masculine\" #>  #> [[22]]$homeworld #> [1] NA #>  #> [[22]]$species #> [1] \"Droid\" #>  #> [[22]]$films #> [[22]]$films[[1]] #> [1] \"The Empire Strikes Back\" #>  #>  #> [[22]]$vehicles #> [[22]]$vehicles[[1]] #> character(0) #>  #>  #> [[22]]$starships #> [[22]]$starships[[1]] #> character(0) #>  #>  #>  #> [[23]] #> [[23]]$name #> [1] \"Bossk\" #>  #> [[23]]$height #> [1] 190 #>  #> [[23]]$mass #> [1] 113 #>  #> [[23]]$hair_color #> [1] \"none\" #>  #> [[23]]$skin_color #> [1] \"green\" #>  #> [[23]]$eye_color #> [1] \"red\" #>  #> [[23]]$birth_year #> [1] 53 #>  #> [[23]]$sex #> [1] \"male\" #>  #> [[23]]$gender #> [1] \"masculine\" #>  #> [[23]]$homeworld #> [1] \"Trandosha\" #>  #> [[23]]$species #> [1] \"Trandoshan\" #>  #> [[23]]$films #> [[23]]$films[[1]] #> [1] \"The Empire Strikes Back\" #>  #>  #> [[23]]$vehicles #> [[23]]$vehicles[[1]] #> character(0) #>  #>  #> [[23]]$starships #> [[23]]$starships[[1]] #> character(0) #>  #>  #>  #> [[24]] #> [[24]]$name #> [1] \"Lando Calrissian\" #>  #> [[24]]$height #> [1] 177 #>  #> [[24]]$mass #> [1] 79 #>  #> [[24]]$hair_color #> [1] \"black\" #>  #> [[24]]$skin_color #> [1] \"dark\" #>  #> [[24]]$eye_color #> [1] \"brown\" #>  #> [[24]]$birth_year #> [1] 31 #>  #> [[24]]$sex #> [1] \"male\" #>  #> [[24]]$gender #> [1] \"masculine\" #>  #> [[24]]$homeworld #> [1] \"Socorro\" #>  #> [[24]]$species #> [1] \"Human\" #>  #> [[24]]$films #> [[24]]$films[[1]] #> [1] \"The Empire Strikes Back\" \"Return of the Jedi\"      #>  #>  #> [[24]]$vehicles #> [[24]]$vehicles[[1]] #> character(0) #>  #>  #> [[24]]$starships #> [[24]]$starships[[1]] #> [1] \"Millennium Falcon\" #>  #>  #>  #> [[25]] #> [[25]]$name #> [1] \"Lobot\" #>  #> [[25]]$height #> [1] 175 #>  #> [[25]]$mass #> [1] 79 #>  #> [[25]]$hair_color #> [1] \"none\" #>  #> [[25]]$skin_color #> [1] \"light\" #>  #> [[25]]$eye_color #> [1] \"blue\" #>  #> [[25]]$birth_year #> [1] 37 #>  #> [[25]]$sex #> [1] \"male\" #>  #> [[25]]$gender #> [1] \"masculine\" #>  #> [[25]]$homeworld #> [1] \"Bespin\" #>  #> [[25]]$species #> [1] \"Human\" #>  #> [[25]]$films #> [[25]]$films[[1]] #> [1] \"The Empire Strikes Back\" #>  #>  #> [[25]]$vehicles #> [[25]]$vehicles[[1]] #> character(0) #>  #>  #> [[25]]$starships #> [[25]]$starships[[1]] #> character(0) #>  #>  #>  #> [[26]] #> [[26]]$name #> [1] \"Ackbar\" #>  #> [[26]]$height #> [1] 180 #>  #> [[26]]$mass #> [1] 83 #>  #> [[26]]$hair_color #> [1] \"none\" #>  #> [[26]]$skin_color #> [1] \"brown mottle\" #>  #> [[26]]$eye_color #> [1] \"orange\" #>  #> [[26]]$birth_year #> [1] 41 #>  #> [[26]]$sex #> [1] \"male\" #>  #> [[26]]$gender #> [1] \"masculine\" #>  #> [[26]]$homeworld #> [1] \"Mon Cala\" #>  #> [[26]]$species #> [1] \"Mon Calamari\" #>  #> [[26]]$films #> [[26]]$films[[1]] #> [1] \"Return of the Jedi\" \"The Force Awakens\"  #>  #>  #> [[26]]$vehicles #> [[26]]$vehicles[[1]] #> character(0) #>  #>  #> [[26]]$starships #> [[26]]$starships[[1]] #> character(0) #>  #>  #>  #> [[27]] #> [[27]]$name #> [1] \"Mon Mothma\" #>  #> [[27]]$height #> [1] 150 #>  #> [[27]]$mass #> [1] NA #>  #> [[27]]$hair_color #> [1] \"auburn\" #>  #> [[27]]$skin_color #> [1] \"fair\" #>  #> [[27]]$eye_color #> [1] \"blue\" #>  #> [[27]]$birth_year #> [1] 48 #>  #> [[27]]$sex #> [1] \"female\" #>  #> [[27]]$gender #> [1] \"feminine\" #>  #> [[27]]$homeworld #> [1] \"Chandrila\" #>  #> [[27]]$species #> [1] \"Human\" #>  #> [[27]]$films #> [[27]]$films[[1]] #> [1] \"Return of the Jedi\" #>  #>  #> [[27]]$vehicles #> [[27]]$vehicles[[1]] #> character(0) #>  #>  #> [[27]]$starships #> [[27]]$starships[[1]] #> character(0) #>  #>  #>  #> [[28]] #> [[28]]$name #> [1] \"Arvel Crynyd\" #>  #> [[28]]$height #> [1] NA #>  #> [[28]]$mass #> [1] NA #>  #> [[28]]$hair_color #> [1] \"brown\" #>  #> [[28]]$skin_color #> [1] \"fair\" #>  #> [[28]]$eye_color #> [1] \"brown\" #>  #> [[28]]$birth_year #> [1] NA #>  #> [[28]]$sex #> [1] \"male\" #>  #> [[28]]$gender #> [1] \"masculine\" #>  #> [[28]]$homeworld #> [1] NA #>  #> [[28]]$species #> [1] \"Human\" #>  #> [[28]]$films #> [[28]]$films[[1]] #> [1] \"Return of the Jedi\" #>  #>  #> [[28]]$vehicles #> [[28]]$vehicles[[1]] #> character(0) #>  #>  #> [[28]]$starships #> [[28]]$starships[[1]] #> [1] \"A-wing\" #>  #>  #>  #> [[29]] #> [[29]]$name #> [1] \"Wicket Systri Warrick\" #>  #> [[29]]$height #> [1] 88 #>  #> [[29]]$mass #> [1] 20 #>  #> [[29]]$hair_color #> [1] \"brown\" #>  #> [[29]]$skin_color #> [1] \"brown\" #>  #> [[29]]$eye_color #> [1] \"brown\" #>  #> [[29]]$birth_year #> [1] 8 #>  #> [[29]]$sex #> [1] \"male\" #>  #> [[29]]$gender #> [1] \"masculine\" #>  #> [[29]]$homeworld #> [1] \"Endor\" #>  #> [[29]]$species #> [1] \"Ewok\" #>  #> [[29]]$films #> [[29]]$films[[1]] #> [1] \"Return of the Jedi\" #>  #>  #> [[29]]$vehicles #> [[29]]$vehicles[[1]] #> character(0) #>  #>  #> [[29]]$starships #> [[29]]$starships[[1]] #> character(0) #>  #>  #>  #> [[30]] #> [[30]]$name #> [1] \"Nien Nunb\" #>  #> [[30]]$height #> [1] 160 #>  #> [[30]]$mass #> [1] 68 #>  #> [[30]]$hair_color #> [1] \"none\" #>  #> [[30]]$skin_color #> [1] \"grey\" #>  #> [[30]]$eye_color #> [1] \"black\" #>  #> [[30]]$birth_year #> [1] NA #>  #> [[30]]$sex #> [1] \"male\" #>  #> [[30]]$gender #> [1] \"masculine\" #>  #> [[30]]$homeworld #> [1] \"Sullust\" #>  #> [[30]]$species #> [1] \"Sullustan\" #>  #> [[30]]$films #> [[30]]$films[[1]] #> [1] \"Return of the Jedi\" #>  #>  #> [[30]]$vehicles #> [[30]]$vehicles[[1]] #> character(0) #>  #>  #> [[30]]$starships #> [[30]]$starships[[1]] #> [1] \"Millennium Falcon\" #>  #>  #>  #> [[31]] #> [[31]]$name #> [1] \"Qui-Gon Jinn\" #>  #> [[31]]$height #> [1] 193 #>  #> [[31]]$mass #> [1] 89 #>  #> [[31]]$hair_color #> [1] \"brown\" #>  #> [[31]]$skin_color #> [1] \"fair\" #>  #> [[31]]$eye_color #> [1] \"blue\" #>  #> [[31]]$birth_year #> [1] 92 #>  #> [[31]]$sex #> [1] \"male\" #>  #> [[31]]$gender #> [1] \"masculine\" #>  #> [[31]]$homeworld #> [1] NA #>  #> [[31]]$species #> [1] \"Human\" #>  #> [[31]]$films #> [[31]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[31]]$vehicles #> [[31]]$vehicles[[1]] #> [1] \"Tribubble bongo\" #>  #>  #> [[31]]$starships #> [[31]]$starships[[1]] #> character(0) #>  #>  #>  #> [[32]] #> [[32]]$name #> [1] \"Nute Gunray\" #>  #> [[32]]$height #> [1] 191 #>  #> [[32]]$mass #> [1] 90 #>  #> [[32]]$hair_color #> [1] \"none\" #>  #> [[32]]$skin_color #> [1] \"mottled green\" #>  #> [[32]]$eye_color #> [1] \"red\" #>  #> [[32]]$birth_year #> [1] NA #>  #> [[32]]$sex #> [1] \"male\" #>  #> [[32]]$gender #> [1] \"masculine\" #>  #> [[32]]$homeworld #> [1] \"Cato Neimoidia\" #>  #> [[32]]$species #> [1] \"Neimodian\" #>  #> [[32]]$films #> [[32]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[32]]$vehicles #> [[32]]$vehicles[[1]] #> character(0) #>  #>  #> [[32]]$starships #> [[32]]$starships[[1]] #> character(0) #>  #>  #>  #> [[33]] #> [[33]]$name #> [1] \"Finis Valorum\" #>  #> [[33]]$height #> [1] 170 #>  #> [[33]]$mass #> [1] NA #>  #> [[33]]$hair_color #> [1] \"blond\" #>  #> [[33]]$skin_color #> [1] \"fair\" #>  #> [[33]]$eye_color #> [1] \"blue\" #>  #> [[33]]$birth_year #> [1] 91 #>  #> [[33]]$sex #> [1] \"male\" #>  #> [[33]]$gender #> [1] \"masculine\" #>  #> [[33]]$homeworld #> [1] \"Coruscant\" #>  #> [[33]]$species #> [1] \"Human\" #>  #> [[33]]$films #> [[33]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[33]]$vehicles #> [[33]]$vehicles[[1]] #> character(0) #>  #>  #> [[33]]$starships #> [[33]]$starships[[1]] #> character(0) #>  #>  #>  #> [[34]] #> [[34]]$name #> [1] \"Padmé Amidala\" #>  #> [[34]]$height #> [1] 185 #>  #> [[34]]$mass #> [1] 45 #>  #> [[34]]$hair_color #> [1] \"brown\" #>  #> [[34]]$skin_color #> [1] \"light\" #>  #> [[34]]$eye_color #> [1] \"brown\" #>  #> [[34]]$birth_year #> [1] 46 #>  #> [[34]]$sex #> [1] \"female\" #>  #> [[34]]$gender #> [1] \"feminine\" #>  #> [[34]]$homeworld #> [1] \"Naboo\" #>  #> [[34]]$species #> [1] \"Human\" #>  #> [[34]]$films #> [[34]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[34]]$vehicles #> [[34]]$vehicles[[1]] #> character(0) #>  #>  #> [[34]]$starships #> [[34]]$starships[[1]] #> [1] \"Naboo fighter\"       \"H-type Nubian yacht\" \"Naboo star skiff\"    #>  #>  #>  #> [[35]] #> [[35]]$name #> [1] \"Jar Jar Binks\" #>  #> [[35]]$height #> [1] 196 #>  #> [[35]]$mass #> [1] 66 #>  #> [[35]]$hair_color #> [1] \"none\" #>  #> [[35]]$skin_color #> [1] \"orange\" #>  #> [[35]]$eye_color #> [1] \"orange\" #>  #> [[35]]$birth_year #> [1] 52 #>  #> [[35]]$sex #> [1] \"male\" #>  #> [[35]]$gender #> [1] \"masculine\" #>  #> [[35]]$homeworld #> [1] \"Naboo\" #>  #> [[35]]$species #> [1] \"Gungan\" #>  #> [[35]]$films #> [[35]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" #>  #>  #> [[35]]$vehicles #> [[35]]$vehicles[[1]] #> character(0) #>  #>  #> [[35]]$starships #> [[35]]$starships[[1]] #> character(0) #>  #>  #>  #> [[36]] #> [[36]]$name #> [1] \"Roos Tarpals\" #>  #> [[36]]$height #> [1] 224 #>  #> [[36]]$mass #> [1] 82 #>  #> [[36]]$hair_color #> [1] \"none\" #>  #> [[36]]$skin_color #> [1] \"grey\" #>  #> [[36]]$eye_color #> [1] \"orange\" #>  #> [[36]]$birth_year #> [1] NA #>  #> [[36]]$sex #> [1] \"male\" #>  #> [[36]]$gender #> [1] \"masculine\" #>  #> [[36]]$homeworld #> [1] \"Naboo\" #>  #> [[36]]$species #> [1] \"Gungan\" #>  #> [[36]]$films #> [[36]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[36]]$vehicles #> [[36]]$vehicles[[1]] #> character(0) #>  #>  #> [[36]]$starships #> [[36]]$starships[[1]] #> character(0) #>  #>  #>  #> [[37]] #> [[37]]$name #> [1] \"Rugor Nass\" #>  #> [[37]]$height #> [1] 206 #>  #> [[37]]$mass #> [1] NA #>  #> [[37]]$hair_color #> [1] \"none\" #>  #> [[37]]$skin_color #> [1] \"green\" #>  #> [[37]]$eye_color #> [1] \"orange\" #>  #> [[37]]$birth_year #> [1] NA #>  #> [[37]]$sex #> [1] \"male\" #>  #> [[37]]$gender #> [1] \"masculine\" #>  #> [[37]]$homeworld #> [1] \"Naboo\" #>  #> [[37]]$species #> [1] \"Gungan\" #>  #> [[37]]$films #> [[37]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[37]]$vehicles #> [[37]]$vehicles[[1]] #> character(0) #>  #>  #> [[37]]$starships #> [[37]]$starships[[1]] #> character(0) #>  #>  #>  #> [[38]] #> [[38]]$name #> [1] \"Ric Olié\" #>  #> [[38]]$height #> [1] 183 #>  #> [[38]]$mass #> [1] NA #>  #> [[38]]$hair_color #> [1] \"brown\" #>  #> [[38]]$skin_color #> [1] \"fair\" #>  #> [[38]]$eye_color #> [1] \"blue\" #>  #> [[38]]$birth_year #> [1] NA #>  #> [[38]]$sex #> [1] \"male\" #>  #> [[38]]$gender #> [1] \"masculine\" #>  #> [[38]]$homeworld #> [1] \"Naboo\" #>  #> [[38]]$species #> [1] \"Human\" #>  #> [[38]]$films #> [[38]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[38]]$vehicles #> [[38]]$vehicles[[1]] #> character(0) #>  #>  #> [[38]]$starships #> [[38]]$starships[[1]] #> [1] \"Naboo Royal Starship\" #>  #>  #>  #> [[39]] #> [[39]]$name #> [1] \"Watto\" #>  #> [[39]]$height #> [1] 137 #>  #> [[39]]$mass #> [1] NA #>  #> [[39]]$hair_color #> [1] \"black\" #>  #> [[39]]$skin_color #> [1] \"blue, grey\" #>  #> [[39]]$eye_color #> [1] \"yellow\" #>  #> [[39]]$birth_year #> [1] NA #>  #> [[39]]$sex #> [1] \"male\" #>  #> [[39]]$gender #> [1] \"masculine\" #>  #> [[39]]$homeworld #> [1] \"Toydaria\" #>  #> [[39]]$species #> [1] \"Toydarian\" #>  #> [[39]]$films #> [[39]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" #>  #>  #> [[39]]$vehicles #> [[39]]$vehicles[[1]] #> character(0) #>  #>  #> [[39]]$starships #> [[39]]$starships[[1]] #> character(0) #>  #>  #>  #> [[40]] #> [[40]]$name #> [1] \"Sebulba\" #>  #> [[40]]$height #> [1] 112 #>  #> [[40]]$mass #> [1] 40 #>  #> [[40]]$hair_color #> [1] \"none\" #>  #> [[40]]$skin_color #> [1] \"grey, red\" #>  #> [[40]]$eye_color #> [1] \"orange\" #>  #> [[40]]$birth_year #> [1] NA #>  #> [[40]]$sex #> [1] \"male\" #>  #> [[40]]$gender #> [1] \"masculine\" #>  #> [[40]]$homeworld #> [1] \"Malastare\" #>  #> [[40]]$species #> [1] \"Dug\" #>  #> [[40]]$films #> [[40]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[40]]$vehicles #> [[40]]$vehicles[[1]] #> character(0) #>  #>  #> [[40]]$starships #> [[40]]$starships[[1]] #> character(0) #>  #>  #>  #> [[41]] #> [[41]]$name #> [1] \"Quarsh Panaka\" #>  #> [[41]]$height #> [1] 183 #>  #> [[41]]$mass #> [1] NA #>  #> [[41]]$hair_color #> [1] \"black\" #>  #> [[41]]$skin_color #> [1] \"dark\" #>  #> [[41]]$eye_color #> [1] \"brown\" #>  #> [[41]]$birth_year #> [1] 62 #>  #> [[41]]$sex #> [1] \"male\" #>  #> [[41]]$gender #> [1] \"masculine\" #>  #> [[41]]$homeworld #> [1] \"Naboo\" #>  #> [[41]]$species #> [1] \"Human\" #>  #> [[41]]$films #> [[41]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[41]]$vehicles #> [[41]]$vehicles[[1]] #> character(0) #>  #>  #> [[41]]$starships #> [[41]]$starships[[1]] #> character(0) #>  #>  #>  #> [[42]] #> [[42]]$name #> [1] \"Shmi Skywalker\" #>  #> [[42]]$height #> [1] 163 #>  #> [[42]]$mass #> [1] NA #>  #> [[42]]$hair_color #> [1] \"black\" #>  #> [[42]]$skin_color #> [1] \"fair\" #>  #> [[42]]$eye_color #> [1] \"brown\" #>  #> [[42]]$birth_year #> [1] 72 #>  #> [[42]]$sex #> [1] \"female\" #>  #> [[42]]$gender #> [1] \"feminine\" #>  #> [[42]]$homeworld #> [1] \"Tatooine\" #>  #> [[42]]$species #> [1] \"Human\" #>  #> [[42]]$films #> [[42]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" #>  #>  #> [[42]]$vehicles #> [[42]]$vehicles[[1]] #> character(0) #>  #>  #> [[42]]$starships #> [[42]]$starships[[1]] #> character(0) #>  #>  #>  #> [[43]] #> [[43]]$name #> [1] \"Darth Maul\" #>  #> [[43]]$height #> [1] 175 #>  #> [[43]]$mass #> [1] 80 #>  #> [[43]]$hair_color #> [1] \"none\" #>  #> [[43]]$skin_color #> [1] \"red\" #>  #> [[43]]$eye_color #> [1] \"yellow\" #>  #> [[43]]$birth_year #> [1] 54 #>  #> [[43]]$sex #> [1] \"male\" #>  #> [[43]]$gender #> [1] \"masculine\" #>  #> [[43]]$homeworld #> [1] \"Dathomir\" #>  #> [[43]]$species #> [1] \"Zabrak\" #>  #> [[43]]$films #> [[43]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[43]]$vehicles #> [[43]]$vehicles[[1]] #> [1] \"Sith speeder\" #>  #>  #> [[43]]$starships #> [[43]]$starships[[1]] #> [1] \"Scimitar\" #>  #>  #>  #> [[44]] #> [[44]]$name #> [1] \"Bib Fortuna\" #>  #> [[44]]$height #> [1] 180 #>  #> [[44]]$mass #> [1] NA #>  #> [[44]]$hair_color #> [1] \"none\" #>  #> [[44]]$skin_color #> [1] \"pale\" #>  #> [[44]]$eye_color #> [1] \"pink\" #>  #> [[44]]$birth_year #> [1] NA #>  #> [[44]]$sex #> [1] \"male\" #>  #> [[44]]$gender #> [1] \"masculine\" #>  #> [[44]]$homeworld #> [1] \"Ryloth\" #>  #> [[44]]$species #> [1] \"Twi'lek\" #>  #> [[44]]$films #> [[44]]$films[[1]] #> [1] \"Return of the Jedi\" #>  #>  #> [[44]]$vehicles #> [[44]]$vehicles[[1]] #> character(0) #>  #>  #> [[44]]$starships #> [[44]]$starships[[1]] #> character(0) #>  #>  #>  #> [[45]] #> [[45]]$name #> [1] \"Ayla Secura\" #>  #> [[45]]$height #> [1] 178 #>  #> [[45]]$mass #> [1] 55 #>  #> [[45]]$hair_color #> [1] \"none\" #>  #> [[45]]$skin_color #> [1] \"blue\" #>  #> [[45]]$eye_color #> [1] \"hazel\" #>  #> [[45]]$birth_year #> [1] 48 #>  #> [[45]]$sex #> [1] \"female\" #>  #> [[45]]$gender #> [1] \"feminine\" #>  #> [[45]]$homeworld #> [1] \"Ryloth\" #>  #> [[45]]$species #> [1] \"Twi'lek\" #>  #> [[45]]$films #> [[45]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[45]]$vehicles #> [[45]]$vehicles[[1]] #> character(0) #>  #>  #> [[45]]$starships #> [[45]]$starships[[1]] #> character(0) #>  #>  #>  #> [[46]] #> [[46]]$name #> [1] \"Ratts Tyerel\" #>  #> [[46]]$height #> [1] 79 #>  #> [[46]]$mass #> [1] 15 #>  #> [[46]]$hair_color #> [1] \"none\" #>  #> [[46]]$skin_color #> [1] \"grey, blue\" #>  #> [[46]]$eye_color #> [1] \"unknown\" #>  #> [[46]]$birth_year #> [1] NA #>  #> [[46]]$sex #> [1] \"male\" #>  #> [[46]]$gender #> [1] \"masculine\" #>  #> [[46]]$homeworld #> [1] \"Aleen Minor\" #>  #> [[46]]$species #> [1] \"Aleena\" #>  #> [[46]]$films #> [[46]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[46]]$vehicles #> [[46]]$vehicles[[1]] #> character(0) #>  #>  #> [[46]]$starships #> [[46]]$starships[[1]] #> character(0) #>  #>  #>  #> [[47]] #> [[47]]$name #> [1] \"Dud Bolt\" #>  #> [[47]]$height #> [1] 94 #>  #> [[47]]$mass #> [1] 45 #>  #> [[47]]$hair_color #> [1] \"none\" #>  #> [[47]]$skin_color #> [1] \"blue, grey\" #>  #> [[47]]$eye_color #> [1] \"yellow\" #>  #> [[47]]$birth_year #> [1] NA #>  #> [[47]]$sex #> [1] \"male\" #>  #> [[47]]$gender #> [1] \"masculine\" #>  #> [[47]]$homeworld #> [1] \"Vulpter\" #>  #> [[47]]$species #> [1] \"Vulptereen\" #>  #> [[47]]$films #> [[47]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[47]]$vehicles #> [[47]]$vehicles[[1]] #> character(0) #>  #>  #> [[47]]$starships #> [[47]]$starships[[1]] #> character(0) #>  #>  #>  #> [[48]] #> [[48]]$name #> [1] \"Gasgano\" #>  #> [[48]]$height #> [1] 122 #>  #> [[48]]$mass #> [1] NA #>  #> [[48]]$hair_color #> [1] \"none\" #>  #> [[48]]$skin_color #> [1] \"white, blue\" #>  #> [[48]]$eye_color #> [1] \"black\" #>  #> [[48]]$birth_year #> [1] NA #>  #> [[48]]$sex #> [1] \"male\" #>  #> [[48]]$gender #> [1] \"masculine\" #>  #> [[48]]$homeworld #> [1] \"Troiken\" #>  #> [[48]]$species #> [1] \"Xexto\" #>  #> [[48]]$films #> [[48]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[48]]$vehicles #> [[48]]$vehicles[[1]] #> character(0) #>  #>  #> [[48]]$starships #> [[48]]$starships[[1]] #> character(0) #>  #>  #>  #> [[49]] #> [[49]]$name #> [1] \"Ben Quadinaros\" #>  #> [[49]]$height #> [1] 163 #>  #> [[49]]$mass #> [1] 65 #>  #> [[49]]$hair_color #> [1] \"none\" #>  #> [[49]]$skin_color #> [1] \"grey, green, yellow\" #>  #> [[49]]$eye_color #> [1] \"orange\" #>  #> [[49]]$birth_year #> [1] NA #>  #> [[49]]$sex #> [1] \"male\" #>  #> [[49]]$gender #> [1] \"masculine\" #>  #> [[49]]$homeworld #> [1] \"Tund\" #>  #> [[49]]$species #> [1] \"Toong\" #>  #> [[49]]$films #> [[49]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[49]]$vehicles #> [[49]]$vehicles[[1]] #> character(0) #>  #>  #> [[49]]$starships #> [[49]]$starships[[1]] #> character(0) #>  #>  #>  #> [[50]] #> [[50]]$name #> [1] \"Mace Windu\" #>  #> [[50]]$height #> [1] 188 #>  #> [[50]]$mass #> [1] 84 #>  #> [[50]]$hair_color #> [1] \"none\" #>  #> [[50]]$skin_color #> [1] \"dark\" #>  #> [[50]]$eye_color #> [1] \"brown\" #>  #> [[50]]$birth_year #> [1] 72 #>  #> [[50]]$sex #> [1] \"male\" #>  #> [[50]]$gender #> [1] \"masculine\" #>  #> [[50]]$homeworld #> [1] \"Haruun Kal\" #>  #> [[50]]$species #> [1] \"Human\" #>  #> [[50]]$films #> [[50]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[50]]$vehicles #> [[50]]$vehicles[[1]] #> character(0) #>  #>  #> [[50]]$starships #> [[50]]$starships[[1]] #> character(0) #>  #>  #>  #> [[51]] #> [[51]]$name #> [1] \"Ki-Adi-Mundi\" #>  #> [[51]]$height #> [1] 198 #>  #> [[51]]$mass #> [1] 82 #>  #> [[51]]$hair_color #> [1] \"white\" #>  #> [[51]]$skin_color #> [1] \"pale\" #>  #> [[51]]$eye_color #> [1] \"yellow\" #>  #> [[51]]$birth_year #> [1] 92 #>  #> [[51]]$sex #> [1] \"male\" #>  #> [[51]]$gender #> [1] \"masculine\" #>  #> [[51]]$homeworld #> [1] \"Cerea\" #>  #> [[51]]$species #> [1] \"Cerean\" #>  #> [[51]]$films #> [[51]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[51]]$vehicles #> [[51]]$vehicles[[1]] #> character(0) #>  #>  #> [[51]]$starships #> [[51]]$starships[[1]] #> character(0) #>  #>  #>  #> [[52]] #> [[52]]$name #> [1] \"Kit Fisto\" #>  #> [[52]]$height #> [1] 196 #>  #> [[52]]$mass #> [1] 87 #>  #> [[52]]$hair_color #> [1] \"none\" #>  #> [[52]]$skin_color #> [1] \"green\" #>  #> [[52]]$eye_color #> [1] \"black\" #>  #> [[52]]$birth_year #> [1] NA #>  #> [[52]]$sex #> [1] \"male\" #>  #> [[52]]$gender #> [1] \"masculine\" #>  #> [[52]]$homeworld #> [1] \"Glee Anselm\" #>  #> [[52]]$species #> [1] \"Nautolan\" #>  #> [[52]]$films #> [[52]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[52]]$vehicles #> [[52]]$vehicles[[1]] #> character(0) #>  #>  #> [[52]]$starships #> [[52]]$starships[[1]] #> character(0) #>  #>  #>  #> [[53]] #> [[53]]$name #> [1] \"Eeth Koth\" #>  #> [[53]]$height #> [1] 171 #>  #> [[53]]$mass #> [1] NA #>  #> [[53]]$hair_color #> [1] \"black\" #>  #> [[53]]$skin_color #> [1] \"brown\" #>  #> [[53]]$eye_color #> [1] \"brown\" #>  #> [[53]]$birth_year #> [1] NA #>  #> [[53]]$sex #> [1] \"male\" #>  #> [[53]]$gender #> [1] \"masculine\" #>  #> [[53]]$homeworld #> [1] \"Iridonia\" #>  #> [[53]]$species #> [1] \"Zabrak\" #>  #> [[53]]$films #> [[53]]$films[[1]] #> [1] \"The Phantom Menace\"  \"Revenge of the Sith\" #>  #>  #> [[53]]$vehicles #> [[53]]$vehicles[[1]] #> character(0) #>  #>  #> [[53]]$starships #> [[53]]$starships[[1]] #> character(0) #>  #>  #>  #> [[54]] #> [[54]]$name #> [1] \"Adi Gallia\" #>  #> [[54]]$height #> [1] 184 #>  #> [[54]]$mass #> [1] 50 #>  #> [[54]]$hair_color #> [1] \"none\" #>  #> [[54]]$skin_color #> [1] \"dark\" #>  #> [[54]]$eye_color #> [1] \"blue\" #>  #> [[54]]$birth_year #> [1] NA #>  #> [[54]]$sex #> [1] \"female\" #>  #> [[54]]$gender #> [1] \"feminine\" #>  #> [[54]]$homeworld #> [1] \"Coruscant\" #>  #> [[54]]$species #> [1] \"Tholothian\" #>  #> [[54]]$films #> [[54]]$films[[1]] #> [1] \"The Phantom Menace\"  \"Revenge of the Sith\" #>  #>  #> [[54]]$vehicles #> [[54]]$vehicles[[1]] #> character(0) #>  #>  #> [[54]]$starships #> [[54]]$starships[[1]] #> character(0) #>  #>  #>  #> [[55]] #> [[55]]$name #> [1] \"Saesee Tiin\" #>  #> [[55]]$height #> [1] 188 #>  #> [[55]]$mass #> [1] NA #>  #> [[55]]$hair_color #> [1] \"none\" #>  #> [[55]]$skin_color #> [1] \"pale\" #>  #> [[55]]$eye_color #> [1] \"orange\" #>  #> [[55]]$birth_year #> [1] NA #>  #> [[55]]$sex #> [1] \"male\" #>  #> [[55]]$gender #> [1] \"masculine\" #>  #> [[55]]$homeworld #> [1] \"Iktotch\" #>  #> [[55]]$species #> [1] \"Iktotchi\" #>  #> [[55]]$films #> [[55]]$films[[1]] #> [1] \"The Phantom Menace\"  \"Revenge of the Sith\" #>  #>  #> [[55]]$vehicles #> [[55]]$vehicles[[1]] #> character(0) #>  #>  #> [[55]]$starships #> [[55]]$starships[[1]] #> character(0) #>  #>  #>  #> [[56]] #> [[56]]$name #> [1] \"Yarael Poof\" #>  #> [[56]]$height #> [1] 264 #>  #> [[56]]$mass #> [1] NA #>  #> [[56]]$hair_color #> [1] \"none\" #>  #> [[56]]$skin_color #> [1] \"white\" #>  #> [[56]]$eye_color #> [1] \"yellow\" #>  #> [[56]]$birth_year #> [1] NA #>  #> [[56]]$sex #> [1] \"male\" #>  #> [[56]]$gender #> [1] \"masculine\" #>  #> [[56]]$homeworld #> [1] \"Quermia\" #>  #> [[56]]$species #> [1] \"Quermian\" #>  #> [[56]]$films #> [[56]]$films[[1]] #> [1] \"The Phantom Menace\" #>  #>  #> [[56]]$vehicles #> [[56]]$vehicles[[1]] #> character(0) #>  #>  #> [[56]]$starships #> [[56]]$starships[[1]] #> character(0) #>  #>  #>  #> [[57]] #> [[57]]$name #> [1] \"Plo Koon\" #>  #> [[57]]$height #> [1] 188 #>  #> [[57]]$mass #> [1] 80 #>  #> [[57]]$hair_color #> [1] \"none\" #>  #> [[57]]$skin_color #> [1] \"orange\" #>  #> [[57]]$eye_color #> [1] \"black\" #>  #> [[57]]$birth_year #> [1] 22 #>  #> [[57]]$sex #> [1] \"male\" #>  #> [[57]]$gender #> [1] \"masculine\" #>  #> [[57]]$homeworld #> [1] \"Dorin\" #>  #> [[57]]$species #> [1] \"Kel Dor\" #>  #> [[57]]$films #> [[57]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[57]]$vehicles #> [[57]]$vehicles[[1]] #> character(0) #>  #>  #> [[57]]$starships #> [[57]]$starships[[1]] #> [1] \"Jedi starfighter\" #>  #>  #>  #> [[58]] #> [[58]]$name #> [1] \"Mas Amedda\" #>  #> [[58]]$height #> [1] 196 #>  #> [[58]]$mass #> [1] NA #>  #> [[58]]$hair_color #> [1] \"none\" #>  #> [[58]]$skin_color #> [1] \"blue\" #>  #> [[58]]$eye_color #> [1] \"blue\" #>  #> [[58]]$birth_year #> [1] NA #>  #> [[58]]$sex #> [1] \"male\" #>  #> [[58]]$gender #> [1] \"masculine\" #>  #> [[58]]$homeworld #> [1] \"Champala\" #>  #> [[58]]$species #> [1] \"Chagrian\" #>  #> [[58]]$films #> [[58]]$films[[1]] #> [1] \"The Phantom Menace\"   \"Attack of the Clones\" #>  #>  #> [[58]]$vehicles #> [[58]]$vehicles[[1]] #> character(0) #>  #>  #> [[58]]$starships #> [[58]]$starships[[1]] #> character(0) #>  #>  #>  #> [[59]] #> [[59]]$name #> [1] \"Gregar Typho\" #>  #> [[59]]$height #> [1] 185 #>  #> [[59]]$mass #> [1] 85 #>  #> [[59]]$hair_color #> [1] \"black\" #>  #> [[59]]$skin_color #> [1] \"dark\" #>  #> [[59]]$eye_color #> [1] \"brown\" #>  #> [[59]]$birth_year #> [1] NA #>  #> [[59]]$sex #> [1] NA #>  #> [[59]]$gender #> [1] NA #>  #> [[59]]$homeworld #> [1] \"Naboo\" #>  #> [[59]]$species #> [1] NA #>  #> [[59]]$films #> [[59]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[59]]$vehicles #> [[59]]$vehicles[[1]] #> character(0) #>  #>  #> [[59]]$starships #> [[59]]$starships[[1]] #> [1] \"Naboo fighter\" #>  #>  #>  #> [[60]] #> [[60]]$name #> [1] \"Cordé\" #>  #> [[60]]$height #> [1] 157 #>  #> [[60]]$mass #> [1] NA #>  #> [[60]]$hair_color #> [1] \"brown\" #>  #> [[60]]$skin_color #> [1] \"light\" #>  #> [[60]]$eye_color #> [1] \"brown\" #>  #> [[60]]$birth_year #> [1] NA #>  #> [[60]]$sex #> [1] NA #>  #> [[60]]$gender #> [1] NA #>  #> [[60]]$homeworld #> [1] \"Naboo\" #>  #> [[60]]$species #> [1] NA #>  #> [[60]]$films #> [[60]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[60]]$vehicles #> [[60]]$vehicles[[1]] #> character(0) #>  #>  #> [[60]]$starships #> [[60]]$starships[[1]] #> character(0) #>  #>  #>  #> [[61]] #> [[61]]$name #> [1] \"Cliegg Lars\" #>  #> [[61]]$height #> [1] 183 #>  #> [[61]]$mass #> [1] NA #>  #> [[61]]$hair_color #> [1] \"brown\" #>  #> [[61]]$skin_color #> [1] \"fair\" #>  #> [[61]]$eye_color #> [1] \"blue\" #>  #> [[61]]$birth_year #> [1] 82 #>  #> [[61]]$sex #> [1] \"male\" #>  #> [[61]]$gender #> [1] \"masculine\" #>  #> [[61]]$homeworld #> [1] \"Tatooine\" #>  #> [[61]]$species #> [1] \"Human\" #>  #> [[61]]$films #> [[61]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[61]]$vehicles #> [[61]]$vehicles[[1]] #> character(0) #>  #>  #> [[61]]$starships #> [[61]]$starships[[1]] #> character(0) #>  #>  #>  #> [[62]] #> [[62]]$name #> [1] \"Poggle the Lesser\" #>  #> [[62]]$height #> [1] 183 #>  #> [[62]]$mass #> [1] 80 #>  #> [[62]]$hair_color #> [1] \"none\" #>  #> [[62]]$skin_color #> [1] \"green\" #>  #> [[62]]$eye_color #> [1] \"yellow\" #>  #> [[62]]$birth_year #> [1] NA #>  #> [[62]]$sex #> [1] \"male\" #>  #> [[62]]$gender #> [1] \"masculine\" #>  #> [[62]]$homeworld #> [1] \"Geonosis\" #>  #> [[62]]$species #> [1] \"Geonosian\" #>  #> [[62]]$films #> [[62]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[62]]$vehicles #> [[62]]$vehicles[[1]] #> character(0) #>  #>  #> [[62]]$starships #> [[62]]$starships[[1]] #> character(0) #>  #>  #>  #> [[63]] #> [[63]]$name #> [1] \"Luminara Unduli\" #>  #> [[63]]$height #> [1] 170 #>  #> [[63]]$mass #> [1] 56.2 #>  #> [[63]]$hair_color #> [1] \"black\" #>  #> [[63]]$skin_color #> [1] \"yellow\" #>  #> [[63]]$eye_color #> [1] \"blue\" #>  #> [[63]]$birth_year #> [1] 58 #>  #> [[63]]$sex #> [1] \"female\" #>  #> [[63]]$gender #> [1] \"feminine\" #>  #> [[63]]$homeworld #> [1] \"Mirial\" #>  #> [[63]]$species #> [1] \"Mirialan\" #>  #> [[63]]$films #> [[63]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[63]]$vehicles #> [[63]]$vehicles[[1]] #> character(0) #>  #>  #> [[63]]$starships #> [[63]]$starships[[1]] #> character(0) #>  #>  #>  #> [[64]] #> [[64]]$name #> [1] \"Barriss Offee\" #>  #> [[64]]$height #> [1] 166 #>  #> [[64]]$mass #> [1] 50 #>  #> [[64]]$hair_color #> [1] \"black\" #>  #> [[64]]$skin_color #> [1] \"yellow\" #>  #> [[64]]$eye_color #> [1] \"blue\" #>  #> [[64]]$birth_year #> [1] 40 #>  #> [[64]]$sex #> [1] \"female\" #>  #> [[64]]$gender #> [1] \"feminine\" #>  #> [[64]]$homeworld #> [1] \"Mirial\" #>  #> [[64]]$species #> [1] \"Mirialan\" #>  #> [[64]]$films #> [[64]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[64]]$vehicles #> [[64]]$vehicles[[1]] #> character(0) #>  #>  #> [[64]]$starships #> [[64]]$starships[[1]] #> character(0) #>  #>  #>  #> [[65]] #> [[65]]$name #> [1] \"Dormé\" #>  #> [[65]]$height #> [1] 165 #>  #> [[65]]$mass #> [1] NA #>  #> [[65]]$hair_color #> [1] \"brown\" #>  #> [[65]]$skin_color #> [1] \"light\" #>  #> [[65]]$eye_color #> [1] \"brown\" #>  #> [[65]]$birth_year #> [1] NA #>  #> [[65]]$sex #> [1] \"female\" #>  #> [[65]]$gender #> [1] \"feminine\" #>  #> [[65]]$homeworld #> [1] \"Naboo\" #>  #> [[65]]$species #> [1] \"Human\" #>  #> [[65]]$films #> [[65]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[65]]$vehicles #> [[65]]$vehicles[[1]] #> character(0) #>  #>  #> [[65]]$starships #> [[65]]$starships[[1]] #> character(0) #>  #>  #>  #> [[66]] #> [[66]]$name #> [1] \"Dooku\" #>  #> [[66]]$height #> [1] 193 #>  #> [[66]]$mass #> [1] 80 #>  #> [[66]]$hair_color #> [1] \"white\" #>  #> [[66]]$skin_color #> [1] \"fair\" #>  #> [[66]]$eye_color #> [1] \"brown\" #>  #> [[66]]$birth_year #> [1] 102 #>  #> [[66]]$sex #> [1] \"male\" #>  #> [[66]]$gender #> [1] \"masculine\" #>  #> [[66]]$homeworld #> [1] \"Serenno\" #>  #> [[66]]$species #> [1] \"Human\" #>  #> [[66]]$films #> [[66]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[66]]$vehicles #> [[66]]$vehicles[[1]] #> [1] \"Flitknot speeder\" #>  #>  #> [[66]]$starships #> [[66]]$starships[[1]] #> character(0) #>  #>  #>  #> [[67]] #> [[67]]$name #> [1] \"Bail Prestor Organa\" #>  #> [[67]]$height #> [1] 191 #>  #> [[67]]$mass #> [1] NA #>  #> [[67]]$hair_color #> [1] \"black\" #>  #> [[67]]$skin_color #> [1] \"tan\" #>  #> [[67]]$eye_color #> [1] \"brown\" #>  #> [[67]]$birth_year #> [1] 67 #>  #> [[67]]$sex #> [1] \"male\" #>  #> [[67]]$gender #> [1] \"masculine\" #>  #> [[67]]$homeworld #> [1] \"Alderaan\" #>  #> [[67]]$species #> [1] \"Human\" #>  #> [[67]]$films #> [[67]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[67]]$vehicles #> [[67]]$vehicles[[1]] #> character(0) #>  #>  #> [[67]]$starships #> [[67]]$starships[[1]] #> character(0) #>  #>  #>  #> [[68]] #> [[68]]$name #> [1] \"Jango Fett\" #>  #> [[68]]$height #> [1] 183 #>  #> [[68]]$mass #> [1] 79 #>  #> [[68]]$hair_color #> [1] \"black\" #>  #> [[68]]$skin_color #> [1] \"tan\" #>  #> [[68]]$eye_color #> [1] \"brown\" #>  #> [[68]]$birth_year #> [1] 66 #>  #> [[68]]$sex #> [1] \"male\" #>  #> [[68]]$gender #> [1] \"masculine\" #>  #> [[68]]$homeworld #> [1] \"Concord Dawn\" #>  #> [[68]]$species #> [1] \"Human\" #>  #> [[68]]$films #> [[68]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[68]]$vehicles #> [[68]]$vehicles[[1]] #> character(0) #>  #>  #> [[68]]$starships #> [[68]]$starships[[1]] #> character(0) #>  #>  #>  #> [[69]] #> [[69]]$name #> [1] \"Zam Wesell\" #>  #> [[69]]$height #> [1] 168 #>  #> [[69]]$mass #> [1] 55 #>  #> [[69]]$hair_color #> [1] \"blonde\" #>  #> [[69]]$skin_color #> [1] \"fair, green, yellow\" #>  #> [[69]]$eye_color #> [1] \"yellow\" #>  #> [[69]]$birth_year #> [1] NA #>  #> [[69]]$sex #> [1] \"female\" #>  #> [[69]]$gender #> [1] \"feminine\" #>  #> [[69]]$homeworld #> [1] \"Zolan\" #>  #> [[69]]$species #> [1] \"Clawdite\" #>  #> [[69]]$films #> [[69]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[69]]$vehicles #> [[69]]$vehicles[[1]] #> [1] \"Koro-2 Exodrive airspeeder\" #>  #>  #> [[69]]$starships #> [[69]]$starships[[1]] #> character(0) #>  #>  #>  #> [[70]] #> [[70]]$name #> [1] \"Dexter Jettster\" #>  #> [[70]]$height #> [1] 198 #>  #> [[70]]$mass #> [1] 102 #>  #> [[70]]$hair_color #> [1] \"none\" #>  #> [[70]]$skin_color #> [1] \"brown\" #>  #> [[70]]$eye_color #> [1] \"yellow\" #>  #> [[70]]$birth_year #> [1] NA #>  #> [[70]]$sex #> [1] \"male\" #>  #> [[70]]$gender #> [1] \"masculine\" #>  #> [[70]]$homeworld #> [1] \"Ojom\" #>  #> [[70]]$species #> [1] \"Besalisk\" #>  #> [[70]]$films #> [[70]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[70]]$vehicles #> [[70]]$vehicles[[1]] #> character(0) #>  #>  #> [[70]]$starships #> [[70]]$starships[[1]] #> character(0) #>  #>  #>  #> [[71]] #> [[71]]$name #> [1] \"Lama Su\" #>  #> [[71]]$height #> [1] 229 #>  #> [[71]]$mass #> [1] 88 #>  #> [[71]]$hair_color #> [1] \"none\" #>  #> [[71]]$skin_color #> [1] \"grey\" #>  #> [[71]]$eye_color #> [1] \"black\" #>  #> [[71]]$birth_year #> [1] NA #>  #> [[71]]$sex #> [1] \"male\" #>  #> [[71]]$gender #> [1] \"masculine\" #>  #> [[71]]$homeworld #> [1] \"Kamino\" #>  #> [[71]]$species #> [1] \"Kaminoan\" #>  #> [[71]]$films #> [[71]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[71]]$vehicles #> [[71]]$vehicles[[1]] #> character(0) #>  #>  #> [[71]]$starships #> [[71]]$starships[[1]] #> character(0) #>  #>  #>  #> [[72]] #> [[72]]$name #> [1] \"Taun We\" #>  #> [[72]]$height #> [1] 213 #>  #> [[72]]$mass #> [1] NA #>  #> [[72]]$hair_color #> [1] \"none\" #>  #> [[72]]$skin_color #> [1] \"grey\" #>  #> [[72]]$eye_color #> [1] \"black\" #>  #> [[72]]$birth_year #> [1] NA #>  #> [[72]]$sex #> [1] \"female\" #>  #> [[72]]$gender #> [1] \"feminine\" #>  #> [[72]]$homeworld #> [1] \"Kamino\" #>  #> [[72]]$species #> [1] \"Kaminoan\" #>  #> [[72]]$films #> [[72]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[72]]$vehicles #> [[72]]$vehicles[[1]] #> character(0) #>  #>  #> [[72]]$starships #> [[72]]$starships[[1]] #> character(0) #>  #>  #>  #> [[73]] #> [[73]]$name #> [1] \"Jocasta Nu\" #>  #> [[73]]$height #> [1] 167 #>  #> [[73]]$mass #> [1] NA #>  #> [[73]]$hair_color #> [1] \"white\" #>  #> [[73]]$skin_color #> [1] \"fair\" #>  #> [[73]]$eye_color #> [1] \"blue\" #>  #> [[73]]$birth_year #> [1] NA #>  #> [[73]]$sex #> [1] \"female\" #>  #> [[73]]$gender #> [1] \"feminine\" #>  #> [[73]]$homeworld #> [1] \"Coruscant\" #>  #> [[73]]$species #> [1] \"Human\" #>  #> [[73]]$films #> [[73]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[73]]$vehicles #> [[73]]$vehicles[[1]] #> character(0) #>  #>  #> [[73]]$starships #> [[73]]$starships[[1]] #> character(0) #>  #>  #>  #> [[74]] #> [[74]]$name #> [1] \"R4-P17\" #>  #> [[74]]$height #> [1] 96 #>  #> [[74]]$mass #> [1] NA #>  #> [[74]]$hair_color #> [1] \"none\" #>  #> [[74]]$skin_color #> [1] \"silver, red\" #>  #> [[74]]$eye_color #> [1] \"red, blue\" #>  #> [[74]]$birth_year #> [1] NA #>  #> [[74]]$sex #> [1] \"none\" #>  #> [[74]]$gender #> [1] \"feminine\" #>  #> [[74]]$homeworld #> [1] NA #>  #> [[74]]$species #> [1] \"Droid\" #>  #> [[74]]$films #> [[74]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[74]]$vehicles #> [[74]]$vehicles[[1]] #> character(0) #>  #>  #> [[74]]$starships #> [[74]]$starships[[1]] #> character(0) #>  #>  #>  #> [[75]] #> [[75]]$name #> [1] \"Wat Tambor\" #>  #> [[75]]$height #> [1] 193 #>  #> [[75]]$mass #> [1] 48 #>  #> [[75]]$hair_color #> [1] \"none\" #>  #> [[75]]$skin_color #> [1] \"green, grey\" #>  #> [[75]]$eye_color #> [1] \"unknown\" #>  #> [[75]]$birth_year #> [1] NA #>  #> [[75]]$sex #> [1] \"male\" #>  #> [[75]]$gender #> [1] \"masculine\" #>  #> [[75]]$homeworld #> [1] \"Skako\" #>  #> [[75]]$species #> [1] \"Skakoan\" #>  #> [[75]]$films #> [[75]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[75]]$vehicles #> [[75]]$vehicles[[1]] #> character(0) #>  #>  #> [[75]]$starships #> [[75]]$starships[[1]] #> character(0) #>  #>  #>  #> [[76]] #> [[76]]$name #> [1] \"San Hill\" #>  #> [[76]]$height #> [1] 191 #>  #> [[76]]$mass #> [1] NA #>  #> [[76]]$hair_color #> [1] \"none\" #>  #> [[76]]$skin_color #> [1] \"grey\" #>  #> [[76]]$eye_color #> [1] \"gold\" #>  #> [[76]]$birth_year #> [1] NA #>  #> [[76]]$sex #> [1] \"male\" #>  #> [[76]]$gender #> [1] \"masculine\" #>  #> [[76]]$homeworld #> [1] \"Muunilinst\" #>  #> [[76]]$species #> [1] \"Muun\" #>  #> [[76]]$films #> [[76]]$films[[1]] #> [1] \"Attack of the Clones\" #>  #>  #> [[76]]$vehicles #> [[76]]$vehicles[[1]] #> character(0) #>  #>  #> [[76]]$starships #> [[76]]$starships[[1]] #> character(0) #>  #>  #>  #> [[77]] #> [[77]]$name #> [1] \"Shaak Ti\" #>  #> [[77]]$height #> [1] 178 #>  #> [[77]]$mass #> [1] 57 #>  #> [[77]]$hair_color #> [1] \"none\" #>  #> [[77]]$skin_color #> [1] \"red, blue, white\" #>  #> [[77]]$eye_color #> [1] \"black\" #>  #> [[77]]$birth_year #> [1] NA #>  #> [[77]]$sex #> [1] \"female\" #>  #> [[77]]$gender #> [1] \"feminine\" #>  #> [[77]]$homeworld #> [1] \"Shili\" #>  #> [[77]]$species #> [1] \"Togruta\" #>  #> [[77]]$films #> [[77]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[77]]$vehicles #> [[77]]$vehicles[[1]] #> character(0) #>  #>  #> [[77]]$starships #> [[77]]$starships[[1]] #> character(0) #>  #>  #>  #> [[78]] #> [[78]]$name #> [1] \"Grievous\" #>  #> [[78]]$height #> [1] 216 #>  #> [[78]]$mass #> [1] 159 #>  #> [[78]]$hair_color #> [1] \"none\" #>  #> [[78]]$skin_color #> [1] \"brown, white\" #>  #> [[78]]$eye_color #> [1] \"green, yellow\" #>  #> [[78]]$birth_year #> [1] NA #>  #> [[78]]$sex #> [1] \"male\" #>  #> [[78]]$gender #> [1] \"masculine\" #>  #> [[78]]$homeworld #> [1] \"Kalee\" #>  #> [[78]]$species #> [1] \"Kaleesh\" #>  #> [[78]]$films #> [[78]]$films[[1]] #> [1] \"Revenge of the Sith\" #>  #>  #> [[78]]$vehicles #> [[78]]$vehicles[[1]] #> [1] \"Tsmeu-6 personal wheel bike\" #>  #>  #> [[78]]$starships #> [[78]]$starships[[1]] #> [1] \"Belbullab-22 starfighter\" #>  #>  #>  #> [[79]] #> [[79]]$name #> [1] \"Tarfful\" #>  #> [[79]]$height #> [1] 234 #>  #> [[79]]$mass #> [1] 136 #>  #> [[79]]$hair_color #> [1] \"brown\" #>  #> [[79]]$skin_color #> [1] \"brown\" #>  #> [[79]]$eye_color #> [1] \"blue\" #>  #> [[79]]$birth_year #> [1] NA #>  #> [[79]]$sex #> [1] \"male\" #>  #> [[79]]$gender #> [1] \"masculine\" #>  #> [[79]]$homeworld #> [1] \"Kashyyyk\" #>  #> [[79]]$species #> [1] \"Wookiee\" #>  #> [[79]]$films #> [[79]]$films[[1]] #> [1] \"Revenge of the Sith\" #>  #>  #> [[79]]$vehicles #> [[79]]$vehicles[[1]] #> character(0) #>  #>  #> [[79]]$starships #> [[79]]$starships[[1]] #> character(0) #>  #>  #>  #> [[80]] #> [[80]]$name #> [1] \"Raymus Antilles\" #>  #> [[80]]$height #> [1] 188 #>  #> [[80]]$mass #> [1] 79 #>  #> [[80]]$hair_color #> [1] \"brown\" #>  #> [[80]]$skin_color #> [1] \"light\" #>  #> [[80]]$eye_color #> [1] \"brown\" #>  #> [[80]]$birth_year #> [1] NA #>  #> [[80]]$sex #> [1] \"male\" #>  #> [[80]]$gender #> [1] \"masculine\" #>  #> [[80]]$homeworld #> [1] \"Alderaan\" #>  #> [[80]]$species #> [1] \"Human\" #>  #> [[80]]$films #> [[80]]$films[[1]] #> [1] \"A New Hope\"          \"Revenge of the Sith\" #>  #>  #> [[80]]$vehicles #> [[80]]$vehicles[[1]] #> character(0) #>  #>  #> [[80]]$starships #> [[80]]$starships[[1]] #> character(0) #>  #>  #>  #> [[81]] #> [[81]]$name #> [1] \"Sly Moore\" #>  #> [[81]]$height #> [1] 178 #>  #> [[81]]$mass #> [1] 48 #>  #> [[81]]$hair_color #> [1] \"none\" #>  #> [[81]]$skin_color #> [1] \"pale\" #>  #> [[81]]$eye_color #> [1] \"white\" #>  #> [[81]]$birth_year #> [1] NA #>  #> [[81]]$sex #> [1] NA #>  #> [[81]]$gender #> [1] NA #>  #> [[81]]$homeworld #> [1] \"Umbara\" #>  #> [[81]]$species #> [1] NA #>  #> [[81]]$films #> [[81]]$films[[1]] #> [1] \"Attack of the Clones\" \"Revenge of the Sith\"  #>  #>  #> [[81]]$vehicles #> [[81]]$vehicles[[1]] #> character(0) #>  #>  #> [[81]]$starships #> [[81]]$starships[[1]] #> character(0) #>  #>  #>  #> [[82]] #> [[82]]$name #> [1] \"Tion Medon\" #>  #> [[82]]$height #> [1] 206 #>  #> [[82]]$mass #> [1] 80 #>  #> [[82]]$hair_color #> [1] \"none\" #>  #> [[82]]$skin_color #> [1] \"grey\" #>  #> [[82]]$eye_color #> [1] \"black\" #>  #> [[82]]$birth_year #> [1] NA #>  #> [[82]]$sex #> [1] \"male\" #>  #> [[82]]$gender #> [1] \"masculine\" #>  #> [[82]]$homeworld #> [1] \"Utapau\" #>  #> [[82]]$species #> [1] \"Pau'an\" #>  #> [[82]]$films #> [[82]]$films[[1]] #> [1] \"Revenge of the Sith\" #>  #>  #> [[82]]$vehicles #> [[82]]$vehicles[[1]] #> character(0) #>  #>  #> [[82]]$starships #> [[82]]$starships[[1]] #> character(0) #>  #>  #>  #> [[83]] #> [[83]]$name #> [1] \"Finn\" #>  #> [[83]]$height #> [1] NA #>  #> [[83]]$mass #> [1] NA #>  #> [[83]]$hair_color #> [1] \"black\" #>  #> [[83]]$skin_color #> [1] \"dark\" #>  #> [[83]]$eye_color #> [1] \"dark\" #>  #> [[83]]$birth_year #> [1] NA #>  #> [[83]]$sex #> [1] \"male\" #>  #> [[83]]$gender #> [1] \"masculine\" #>  #> [[83]]$homeworld #> [1] NA #>  #> [[83]]$species #> [1] \"Human\" #>  #> [[83]]$films #> [[83]]$films[[1]] #> [1] \"The Force Awakens\" #>  #>  #> [[83]]$vehicles #> [[83]]$vehicles[[1]] #> character(0) #>  #>  #> [[83]]$starships #> [[83]]$starships[[1]] #> character(0) #>  #>  #>  #> [[84]] #> [[84]]$name #> [1] \"Rey\" #>  #> [[84]]$height #> [1] NA #>  #> [[84]]$mass #> [1] NA #>  #> [[84]]$hair_color #> [1] \"brown\" #>  #> [[84]]$skin_color #> [1] \"light\" #>  #> [[84]]$eye_color #> [1] \"hazel\" #>  #> [[84]]$birth_year #> [1] NA #>  #> [[84]]$sex #> [1] \"female\" #>  #> [[84]]$gender #> [1] \"feminine\" #>  #> [[84]]$homeworld #> [1] NA #>  #> [[84]]$species #> [1] \"Human\" #>  #> [[84]]$films #> [[84]]$films[[1]] #> [1] \"The Force Awakens\" #>  #>  #> [[84]]$vehicles #> [[84]]$vehicles[[1]] #> character(0) #>  #>  #> [[84]]$starships #> [[84]]$starships[[1]] #> character(0) #>  #>  #>  #> [[85]] #> [[85]]$name #> [1] \"Poe Dameron\" #>  #> [[85]]$height #> [1] NA #>  #> [[85]]$mass #> [1] NA #>  #> [[85]]$hair_color #> [1] \"brown\" #>  #> [[85]]$skin_color #> [1] \"light\" #>  #> [[85]]$eye_color #> [1] \"brown\" #>  #> [[85]]$birth_year #> [1] NA #>  #> [[85]]$sex #> [1] \"male\" #>  #> [[85]]$gender #> [1] \"masculine\" #>  #> [[85]]$homeworld #> [1] NA #>  #> [[85]]$species #> [1] \"Human\" #>  #> [[85]]$films #> [[85]]$films[[1]] #> [1] \"The Force Awakens\" #>  #>  #> [[85]]$vehicles #> [[85]]$vehicles[[1]] #> character(0) #>  #>  #> [[85]]$starships #> [[85]]$starships[[1]] #> [1] \"X-wing\" #>  #>  #>  #> [[86]] #> [[86]]$name #> [1] \"BB8\" #>  #> [[86]]$height #> [1] NA #>  #> [[86]]$mass #> [1] NA #>  #> [[86]]$hair_color #> [1] \"none\" #>  #> [[86]]$skin_color #> [1] \"none\" #>  #> [[86]]$eye_color #> [1] \"black\" #>  #> [[86]]$birth_year #> [1] NA #>  #> [[86]]$sex #> [1] \"none\" #>  #> [[86]]$gender #> [1] \"masculine\" #>  #> [[86]]$homeworld #> [1] NA #>  #> [[86]]$species #> [1] \"Droid\" #>  #> [[86]]$films #> [[86]]$films[[1]] #> [1] \"The Force Awakens\" #>  #>  #> [[86]]$vehicles #> [[86]]$vehicles[[1]] #> character(0) #>  #>  #> [[86]]$starships #> [[86]]$starships[[1]] #> character(0) #>  #>  #>  #> [[87]] #> [[87]]$name #> [1] \"Captain Phasma\" #>  #> [[87]]$height #> [1] NA #>  #> [[87]]$mass #> [1] NA #>  #> [[87]]$hair_color #> [1] \"none\" #>  #> [[87]]$skin_color #> [1] \"none\" #>  #> [[87]]$eye_color #> [1] \"unknown\" #>  #> [[87]]$birth_year #> [1] NA #>  #> [[87]]$sex #> [1] \"female\" #>  #> [[87]]$gender #> [1] \"feminine\" #>  #> [[87]]$homeworld #> [1] NA #>  #> [[87]]$species #> [1] \"Human\" #>  #> [[87]]$films #> [[87]]$films[[1]] #> [1] \"The Force Awakens\" #>  #>  #> [[87]]$vehicles #> [[87]]$vehicles[[1]] #> character(0) #>  #>  #> [[87]]$starships #> [[87]]$starships[[1]] #> character(0) #>  #>  #>"},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df1.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list with single entries to dataframe — convert_list_to_df1","title":"Convert list with single entries to dataframe — convert_list_to_df1","text":"Convert list single level entries dataframe, useful converting yaml dataframe.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list with single entries to dataframe — convert_list_to_df1","text":"","code":"convert_list_to_df1(my_list)"},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list with single entries to dataframe — convert_list_to_df1","text":"my_list list single entries","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert list with single entries to dataframe — convert_list_to_df1","text":"tibble two columns","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list with single entries to dataframe — convert_list_to_df1","text":"","code":"if (FALSE) { # \\dontrun{ convert_list_to_df1(as.list(dplyr::starwars)[2]) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list of lists to dataframe — convert_list_to_df2","title":"Convert list of lists to dataframe — convert_list_to_df2","text":"Convert list lists dataframe, useful converting multi-level yaml dataframe. Function required every list named elements.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list of lists to dataframe — convert_list_to_df2","text":"","code":"convert_list_to_df2(my_list, as_character = TRUE, on_empty = NA)"},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list of lists to dataframe — convert_list_to_df2","text":"my_list list lists dataframe as_character logical value, indicating whether values read character on_empty Value return my_list NULL, NA length == 0, default = NA","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert list of lists to dataframe — convert_list_to_df2","text":"tibble","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/convert_list_to_df2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list of lists to dataframe — convert_list_to_df2","text":"","code":"demo_list1 <- list(word1 = \"this\", word2 = \"is\", word3 = \"an\", word4 = \"example\", word5 = \"list\") demo_list2 <- list(word1 = \"and\", word2 = \"a\", word3 = \"second\", word4 = \"list\", word5 = \"also\") combined_list <- list(demo_list1, demo_list2) convert_list_to_df2(combined_list) #> # A tibble: 2 × 5 #>   word1 word2 word3  word4   word5 #>   <chr> <chr> <chr>  <chr>   <chr> #> 1 this  is    an     example list  #> 2 and   a     second list    also"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data from traits.build database — extract_data","title":"Extract data from traits.build database — extract_data","text":"Function extract data traits.build database based value(s) column traits, locations, contexts, methods, taxa, taxonomic_updates, contributors identifiers tables. output traits.build formatted database tables subset based specified table, column (variable) column value.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data from traits.build database — extract_data","text":"","code":"extract_data(   database,   table = NA,   col,   col_value,   partial_matches_allowed = TRUE )"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data from traits.build database — extract_data","text":"database traits.build database (list object) table Table within traits.build database col Column name within specified table. col_value Value (column, table) used subset database. can single value vector. includes partial string matches.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data from traits.build database — extract_data","text":"subset traits.build database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data from traits.build database — extract_data","text":"","code":"if (FALSE) { # \\dontrun{ extract_data(database = traits.build_database, table = \"traits\",  col = \"trait_name\", col_value = \"leaf_area\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all data for a particular dataset — extract_dataset","title":"Extract all data for a particular dataset — extract_dataset","text":"Function subset data associated particular dataset traits.build relational database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all data for a particular dataset — extract_dataset","text":"","code":"extract_dataset(database, dataset_id)"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all data for a particular dataset — extract_dataset","text":"database traits.build database (list object) dataset_id character string matches dataset_id database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all data for a particular dataset — extract_dataset","text":"List tibbles containing traits.build data metadata specified dataset(s).","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract all data for a particular dataset — extract_dataset","text":"extract_dataset developed extract data specific datasets databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract all data for a particular dataset — extract_dataset","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all data for a particular dataset — extract_dataset","text":"","code":"if (FALSE) { # \\dontrun{ extract_dataset(database, \"Falster_2003\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all data for specific taxa — extract_taxa","title":"Extract all data for specific taxa — extract_taxa","text":"Function subset data associated particular taxon traits.build relational database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all data for specific taxa — extract_taxa","text":"","code":"extract_taxa(   database,   family = NULL,   genus = NULL,   taxon_name = NULL,   partial_matches_allowed = TRUE )"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all data for specific taxa — extract_taxa","text":"database traits.build database (list object) family character string family families genus character string genus genera taxon_name character string taxon name(s)","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all data for specific taxa — extract_taxa","text":"List tibbles containing traits.build data metadata specified taxa.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract all data for specific taxa — extract_taxa","text":"extract_taxa developed extract data specific taxa databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/database install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract all data for specific taxa — extract_taxa","text":"Fonti Kar - f.kar@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all data for specific taxa — extract_taxa","text":"","code":"if (FALSE) { # \\dontrun{ extract_taxa(database = austraits, family = \"Proteaceae\") extract_taxa(database = austraits, genus = \"Acacia\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all data for specific traits — extract_trait","title":"Extract all data for specific traits — extract_trait","text":"Function subset data associated particular trait traits.build relational database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all data for specific traits — extract_trait","text":"","code":"extract_trait(database, trait_names, taxon_names)"},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all data for specific traits — extract_trait","text":"database traits.build database (list object) trait_names character string trait(s) data extracted taxon_names optional argument, specifying taxa data extracted","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all data for specific traits — extract_trait","text":"List tibbles containing traits.build data metadata specified trait(s).","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract all data for specific traits — extract_trait","text":"extract_trait developed extract data specific traits databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract all data for specific traits — extract_trait","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/extract_trait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all data for specific traits — extract_trait","text":"","code":"if (FALSE) { # \\dontrun{ extract_trait(database = austraits, trait_names = \"wood_density\", taxon_names = \"Acacia celsa\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/flatten_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Create combined traits.build table — flatten_database","title":"Create combined traits.build table — flatten_database","text":"Create single database output merges together information relational tables within traits.build database. Trait measurements still output long format (1 row per trait value), measurement-related metadata (methods, location properties, context properties, contributors) now included additional columns single table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/flatten_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create combined traits.build table — flatten_database","text":"","code":"flatten_database(database, format, vars, include_description)"},{"path":"https://traitecoevo.github.io/austraits/reference/flatten_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create combined traits.build table — flatten_database","text":"database traits.build database (list object) format parameter locations, contexts data contributors tables specifying data packed. three can formatted single compacted column(s) human readable column (\"single_column_pretty\") using json (\"single_column_json\") syntax. location properties context properties  also option add location_property context_property traits table column (\"many_columns\"); contributors column defaults \"single_column_pretty\" option selected. vars List specifying columns properties include table. detail columns/properties included. include_description logical indicating whether include (TRUE) omit (FALSE) context_property descriptions; defaults TRUE.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/flatten_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create combined traits.build table — flatten_database","text":"table combining information 8 traits.build relational tables: traits, locations, contexts, methods, taxa, taxonomic_updates, contributors, identifiers","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_compiled_by_traits.build.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve compiled by information from metadata table — get_compiled_by_traits.build","title":"Retrieve compiled by information from metadata table — get_compiled_by_traits.build","text":"Retrieve compiled information metadata table","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_compiled_by_traits.build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve compiled by information from metadata table — get_compiled_by_traits.build","text":"","code":"get_compiled_by_traits.build(database)"},{"path":"https://traitecoevo.github.io/austraits/reference/get_compiled_by_traits.build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve compiled by information from metadata table — get_compiled_by_traits.build","text":"database traits.build database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_compiled_by_traits.build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve compiled by information from metadata table — get_compiled_by_traits.build","text":"logical, TRUE indicating version traits table came traits.build version > 1.0","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_traits_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve traits table if user passes traits.build object. — get_traits_table","title":"Retrieve traits table if user passes traits.build object. — get_traits_table","text":"Retrieve traits table user passes traits.build object.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_traits_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve traits table if user passes traits.build object. — get_traits_table","text":"","code":"get_traits_table(database)"},{"path":"https://traitecoevo.github.io/austraits/reference/get_traits_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve traits table if user passes traits.build object. — get_traits_table","text":"database traits.build database traits table traits.build database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_version_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the latest version of AusTraits — get_version_latest","title":"Retrieve the latest version of AusTraits — get_version_latest","text":"Retrieve latest version AusTraits","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_version_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the latest version of AusTraits — get_version_latest","text":"","code":"get_version_latest(path = \"data/austraits\", update = TRUE)"},{"path":"https://traitecoevo.github.io/austraits/reference/get_version_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the latest version of AusTraits — get_version_latest","text":"path file path AusTraits downloaded update TRUE, AusTraits versions .json re-downloaded","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_version_latest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the latest version of AusTraits — get_version_latest","text":"character string latest version","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print out AusTraits versions — get_versions","title":"Print out AusTraits versions — get_versions","text":"Print AusTraits versions","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print out AusTraits versions — get_versions","text":"","code":"get_versions(path = \"data/austraits\", update = TRUE)"},{"path":"https://traitecoevo.github.io/austraits/reference/get_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print out AusTraits versions — get_versions","text":"path file path AusTraits previously downloaded update like versions json updated case new releases?","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print out AusTraits versions — get_versions","text":"tibble containing version numbers doi can used load_austraits()","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/get_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print out AusTraits versions — get_versions","text":"","code":"if (FALSE) { # \\dontrun{ austraits <- load_austraits(version = \"3.0.2\", path = \"data/austraits\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining context properties to traits table — join_context_properties","title":"Joining context properties to traits table — join_context_properties","text":"Function merge metadata contexts table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining context properties to traits table — join_context_properties","text":"","code":"join_context_properties(   database,   format = \"single_column_pretty\",   vars = \"all\",   include_description = TRUE )"},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining context properties to traits table — join_context_properties","text":"database traits.build database (list object) format Specifies whether metadata contexts output human readable format (\"single_column_pretty\"; default), context property added separate column (\"many_columns\") using json syntax (\"single_column_json\"). vars Location properties data appended traits table, defaulting context properties (vars = \"\"). include_description logical indicating whether include (TRUE) omit (FALSE) context_property descriptions.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining context properties to traits table — join_context_properties","text":"traits.build list object, context properties contexts table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining context properties to traits table — join_context_properties","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_context_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining context properties to traits table — join_context_properties","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_context_properties( format = \"many_columns\", vars = \"all\", include_description = TRUE))$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining data contributor metadata to traits table — join_contributors","title":"Joining data contributor metadata to traits table — join_contributors","text":"Function merge metadata data contributors table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining data contributor metadata to traits table — join_contributors","text":"","code":"join_contributors(database, format = \"single_column_pretty\", vars = \"all\")"},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining data contributor metadata to traits table — join_contributors","text":"database traits.build database (list object) format Specifies whether metadata contributors table output human readable format (\"single_column_pretty\"; default) using json syntax (\"single_column_json\"). vars Columns taxa table joined traits table, defaulting columns (vars = \"\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining data contributor metadata to traits table — join_contributors","text":"traits.build list object, additional fields (columns) specified variables data contributors table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining data contributor metadata to traits table — join_contributors","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_contributors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining data contributor metadata to traits table — join_contributors","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_contributors(format = \"single_column_pretty\",  vars = c(\"last_name\", \"first_name\", \"ORCID\")))$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining identifiers to traits table — join_identifiers","title":"Joining identifiers to traits table — join_identifiers","text":"Function merge metadata identifiers table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining identifiers to traits table — join_identifiers","text":"","code":"join_identifiers(database, format = \"single_column_pretty\", vars = \"all\")"},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining identifiers to traits table — join_identifiers","text":"database traits.build database (list object) format Specifies whether metadata identifiers output human readable format (\"single_column_pretty\"; default), location property added separate column (\"many_columns\") using json syntax (\"single_column_json\"). vars Identifier types data appended traits table, defaulting identifier types (vars = \"\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining identifiers to traits table — join_identifiers","text":"traits.build list object, identifiers identifiers table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining identifiers to traits table — join_identifiers","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >=7.0.0 (2025 releases) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining identifiers to traits table — join_identifiers","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_identifiers(format = \"single_column_pretty\", vars = \"all\"))$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining location coordinates to traits table — join_location_coordinates","title":"Joining location coordinates to traits table — join_location_coordinates","text":"Function merge geographic coordinates (latitude/longitude) stored locations table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining location coordinates to traits table — join_location_coordinates","text":"","code":"join_location_coordinates(database)"},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining location coordinates to traits table — join_location_coordinates","text":"database traits.build database (list object)","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining location coordinates to traits table — join_location_coordinates","text":"traits.build list object, additional fields (columns) latitude longitude appended traits dataframe","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining location coordinates to traits table — join_location_coordinates","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining location coordinates to traits table — join_location_coordinates","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_location_coordinates)$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining location properties to traits table — join_location_properties","title":"Joining location properties to traits table — join_location_properties","text":"Function merge metadata locations table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining location properties to traits table — join_location_properties","text":"","code":"join_location_properties(   database,   format = \"single_column_pretty\",   vars = \"all\" )"},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining location properties to traits table — join_location_properties","text":"database traits.build database (list object) format Specifies whether metadata locations output human readable format (\"single_column_pretty\"; default), location property added separate column (\"many_columns\") using json syntax (\"single_column_json\"). vars Location properties data appended traits table, defaulting location properties (vars = \"\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining location properties to traits table — join_location_properties","text":"traits.build list object, location properties locations table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining location properties to traits table — join_location_properties","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_location_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining location properties to traits table — join_location_properties","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_location_properties(format = \"single_column_pretty\", vars = \"all\"))$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining methodological information to traits table — join_methods","title":"Joining methodological information to traits table — join_methods","text":"Function merge metadata methods table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining methodological information to traits table — join_methods","text":"","code":"join_methods(database, vars = c(\"methods\"))"},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining methodological information to traits table — join_methods","text":"database traits.build database (list object) vars Columns taxa table joined traits table, defaulting c(\"methods\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining methodological information to traits table — join_methods","text":"traits.build list object, additional fields (columns) specified variables methods table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining methodological information to traits table — join_methods","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining methodological information to traits table — join_methods","text":"","code":"if (FALSE) { # \\dontrun{ (database %>% join_methods)$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining taxonomy to traits table — join_taxa","title":"Joining taxonomy to traits table — join_taxa","text":"Function merge metadata taxa table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining taxonomy to traits table — join_taxa","text":"","code":"join_taxa(   database,   vars = c(\"family\", \"genus\", \"taxon_rank\", \"establishment_means\") )"},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining taxonomy to traits table — join_taxa","text":"database traits.build database (list object) vars Columns taxa table joined traits table, defaulting c(\"family\", \"genus\", \"taxon_rank\", \"establishment_means\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining taxonomy to traits table — join_taxa","text":"traits.build list object, additional fields (columns) specified variables taxa table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining taxonomy to traits table — join_taxa","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining taxonomy to traits table — join_taxa","text":"","code":"if (FALSE) { # \\dontrun{ #Append taxonomic details (database %>% join_taxa)$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":null,"dir":"Reference","previous_headings":"","what":"Joining taxonomic updates information to traits table — join_taxonomic_updates","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"Function merge metadata taxonomic_updates table traits.build database core traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"","code":"join_taxonomic_updates(database, vars = c(\"aligned_name\"))"},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"database traits.build database (list object) vars Columns taxa table joined traits table, defaulting c(\"aligned_name\").","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"traits.build list object, additional fields (columns) specified variables taxonomic_updates table appended traits table.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"join_ functions developed join relational tables databases built using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits  install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/join_taxonomic_updates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joining taxonomic updates information to traits table — join_taxonomic_updates","text":"","code":"if (FALSE) { # \\dontrun{ #Append taxonomic update details (database %>% join_taxonomic_updates)$traits } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/load_austraits.html","id":null,"dir":"Reference","previous_headings":"","what":"Load AusTraits database into R console — load_austraits","title":"Load AusTraits database into R console — load_austraits","text":"Load AusTraits database R console","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/load_austraits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load AusTraits database into R console — load_austraits","text":"","code":"load_austraits(   doi = NULL,   version = NULL,   path = \"data/austraits\",   update = FALSE )"},{"path":"https://traitecoevo.github.io/austraits/reference/load_austraits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load AusTraits database into R console — load_austraits","text":"doi character string - doi particular version version character string - version number database path file path AusTraits downloaded update TRUE, AusTraits versions .json re-downloaded","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/load_austraits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load AusTraits database into R console — load_austraits","text":"large list containing AusTraits data tables","code":""},{"path":[]},{"path":"https://traitecoevo.github.io/austraits/reference/load_austraits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load AusTraits database into R console — load_austraits","text":"","code":"if (FALSE) { # \\dontrun{ austraits <- load_austraits(version = \"3.0.2\", path = \"data/austraits\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_context_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up context properties — lookup_context_property","title":"Look up context properties — lookup_context_property","text":"Look context properties contain specific search term.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_context_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up context properties — lookup_context_property","text":"","code":"lookup_context_property(database, term)"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_context_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up context properties — lookup_context_property","text":"database traits.build database (list object) term character string context property search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_context_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up context properties — lookup_context_property","text":"vector containing context properties contains search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_context_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up context properties — lookup_context_property","text":"","code":"if (FALSE) { # \\dontrun{ austraits %>% lookup_context_property(\"temperature\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_location_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up location properties — lookup_location_property","title":"Look up location properties — lookup_location_property","text":"Look location properties contain specific search term.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_location_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up location properties — lookup_location_property","text":"","code":"lookup_location_property(database, term)"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_location_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up location properties — lookup_location_property","text":"database traits.build database (list object) term character string location property search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_location_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up location properties — lookup_location_property","text":"vector containing location properties contains search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_location_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up location properties — lookup_location_property","text":"","code":"if (FALSE) { # \\dontrun{ austraits %>% lookup_location_property(\"soil\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_trait.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up a particular trait term — lookup_trait","title":"Look up a particular trait term — lookup_trait","text":"Look particular trait term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_trait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up a particular trait term — lookup_trait","text":"","code":"lookup_trait(database, term)"},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_trait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up a particular trait term — lookup_trait","text":"database traits.build database (list object) term character string trait search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_trait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up a particular trait term — lookup_trait","text":"vector containing traits contains search term","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/lookup_trait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up a particular trait term — lookup_trait","text":"","code":"if (FALSE) { # \\dontrun{ austraits %>% lookup_trait(\"leaf\") %>% extract_trait(database = austraits, .) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://traitecoevo.github.io/austraits/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce location maps of trait values — plot_locations","title":"Produce location maps of trait values — plot_locations","text":"Plot location trait data collected ","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce location maps of trait values — plot_locations","text":"","code":"plot_locations(database, feature = \"trait_name\", ...)"},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce location maps of trait values — plot_locations","text":"database traits.build database traits table traits.build database. Note location details must joined. See join_location_coordinates examples feature grouping/classification categories e.g trait_name, collection_type <= v3.0.2, basis record >3.0.2 ... arguments passed ggplot()","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce location maps of trait values — plot_locations","text":"ggplot sites","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce location maps of trait values — plot_locations","text":"Dony Indiarto - d.indiarto@student.unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce location maps of trait values — plot_locations","text":"","code":"if (FALSE) { # \\dontrun{ #All traits from a given study data <- austraits %>% extract_dataset(dataset_id = \"Falster_2003\") %>% join_location_coordinates()  data %>% plot_locations(\"trait_name\")  #Single trait data <- austraits %>% extract_trait(trait_names = c(\"plant_height\")) %>% join_location_coordinates()  data$traits %>% plot_locations(\"trait_name\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/plot_site_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce location maps of trait values — plot_site_locations","title":"Produce location maps of trait values — plot_site_locations","text":"Plot location trait data collected ","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_site_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce location maps of trait values — plot_site_locations","text":"","code":"plot_site_locations(trait_data, feature = \"trait_name\", ...)"},{"path":"https://traitecoevo.github.io/austraits/reference/plot_site_locations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce location maps of trait values — plot_site_locations","text":"trait_data traits table traits.build database site details appended. See join_location_coordinates examples feature grouping/classification categories e.g trait_name, collection_type <= v3.0.2 ... arguments passed ggplot()","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_site_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce location maps of trait values — plot_site_locations","text":"ggplot sites","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_site_locations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Produce location maps of trait values — plot_site_locations","text":"Dony Indiarto - d.indiarto@student.unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_trait_distribution_beeswarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","title":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","text":"Plots distribution trait values  grouping variable using ggbeeswarm package","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_trait_distribution_beeswarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","text":"","code":"plot_trait_distribution_beeswarm(   database,   trait_name,   y_axis_category,   highlight = NA,   hide_ids = FALSE )"},{"path":"https://traitecoevo.github.io/austraits/reference/plot_trait_distribution_beeswarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","text":"database traits.build database (list object) trait_name Name trait plot y_axis_category One dataset_id, family highlight Specify group highlight hide_ids Logical whether add label y_axis?","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_trait_distribution_beeswarm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/plot_trait_distribution_beeswarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beeswarm Trait distribution — plot_trait_distribution_beeswarm","text":"","code":"if (FALSE) { # \\dontrun{ austraits %>% plot_trait_distribution_beeswarm(\"wood_density\", \"dataset_id\", \"Westoby_2014\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/print.traits.build.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic for outputting a nice summary for austraits objects — print.traits.build","title":"Generic for outputting a nice summary for austraits objects — print.traits.build","text":"Generic outputting nice summary austraits objects","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/print.traits.build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic for outputting a nice summary for austraits objects — print.traits.build","text":"","code":"# S3 method for class 'traits.build' print(x, ...)"},{"path":"https://traitecoevo.github.io/austraits/reference/print.traits.build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic for outputting a nice summary for austraits objects — print.traits.build","text":"x traits.build database ... passed print","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/print.traits.build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic for outputting a nice summary for austraits objects — print.traits.build","text":"nicely printed table","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate bounded trait values — separate_trait_values","title":"Separate bounded trait values — separate_trait_values","text":"function reverts action bind_trait_values. function separates values concatenated studies multiple observations given trait separate row observation.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate bounded trait values — separate_trait_values","text":"","code":"separate_trait_values(trait_data, definitions)"},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate bounded trait values — separate_trait_values","text":"trait_data traits table traits.build database - see example definitions austraits definitions data frame","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate bounded trait values — separate_trait_values","text":"trait tibble","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Separate bounded trait values — separate_trait_values","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/separate_trait_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate bounded trait values — separate_trait_values","text":"","code":"if (FALSE) { # \\dontrun{ trait_data <- austraits$traits %>%  dplyr::filter(dataset_id == \"Falster_2005_1\") trait_data traits_bind <- bind_trait_values(trait_data) separate_trait_values(traits_bind) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/summarise_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise counts for a particular variable of interest — summarise_database","title":"Summarise counts for a particular variable of interest — summarise_database","text":"Summarise counts particular variable interest","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/summarise_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise counts for a particular variable of interest — summarise_database","text":"","code":"summarise_database(database, var)"},{"path":"https://traitecoevo.github.io/austraits/reference/summarise_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise counts for a particular variable of interest — summarise_database","text":"database traits.build database (list object) var variable use wish see summary (trait_name, genus, family)","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/summarise_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise counts for a particular variable of interest — summarise_database","text":"dataframe unique levels variable counts percentage","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/summarise_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise counts for a particular variable of interest — summarise_database","text":"","code":"if (FALSE) { # \\dontrun{ summarise_database(database = austraits, \"trait_name\") summarise_database(database = austraits, \"family\") } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot wide format traits table into long format — trait_pivot_longer","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"trait_pivot_longer \"gathers\" wide format data \"tidy\" format function converts data long format observations different rows type observation denoted trait name. words, trait_pivot_longer reverts actions trait_pivot_wider","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"","code":"trait_pivot_longer(wide_data)"},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"wide_data output trait_pivot_wider.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"tibble long format tibble long format","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"bind_trait_values applied prior trait_pivot_wider AusTraits <= v3.0.2, trait_pivot_longer return tibble fewer observations original traits table. AusTraits version >3.0.2,  trait_pivot_longer return tibble fewer columns original traits table excluded columns include: \"unit\", \"replicates\", \"measurement_remarks\", \"basis_of_record\", \"basis_of_value\" function reverts actions function austraits::trait_pivot_wider. begins derivation traits.build traits table, multiple measurements comprise single observation displayed single row,column trait. converts table long format measurements multiple traits comprise single observation different rows column specifying trait names added. trait_pivot_longer developed pivot traits table database build using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"Daniel Falster - daniel.falster@unsw.edu.au Fonti Kar - fonti.kar@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_longer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot wide format traits table into long format — trait_pivot_longer","text":"","code":"if (FALSE) { # \\dontrun{ data <- austraits$traits %>%  filter(dataset_id == \"Falster_2003\") data #long format  traits_wide <- trait_pivot_wider(data)  traits_wide #wide format  values_long <- trait_pivot_longer(traits_wide) } # }"},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot long format traits table into wide format — trait_pivot_wider","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"Function \"widen\" long format data (\"tidy data\"). Data traits.build databases' traits table organised long format trait measurement different row measurement metadata recorded columns. Multiple traits may measured part single observation function pivots data wider, trait column. Note two trait measurements observation_id different value types (min, mean, mode, etc.) separate rows. function austraits::trait_pivot_longer reverts actions function.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"","code":"trait_pivot_wider(database)"},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"database traits tibble traits.build database","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"traits.build traits table wide format","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"`trait_pivot_wider“ developed pivot traits table database build using traits.build workflow. Learn : https://github.com/traitecoevo/traits.build & https://github.com/traitecoevo/traits.build-book Note AusTraits users: function works AusTraits version >= 5.0.0 (Nov 2023 release) AusTraits versions <= 4.2.0 (Sept 2023 release) see https://github.com/traitecoevo/austraits install old versions package download newer version database.","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"Daniel Falster - daniel.falster@unsw.edu.au","code":""},{"path":"https://traitecoevo.github.io/austraits/reference/trait_pivot_wider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot long format traits table into wide format — trait_pivot_wider","text":"","code":"if (FALSE) { # \\dontrun{  data <- austraits_5.0.0_lite$traits %>% filter(dataset_id == \"Falster_2003\") data #long format  traits_wide <- trait_pivot_wider(data)  traits_wide #wide format } # }"},{"path":"https://traitecoevo.github.io/austraits/news/index.html","id":"austraits-310","dir":"Changelog","previous_headings":"","what":"austraits 3.1.0","title":"austraits 3.1.0","text":"Change functions work traits.build databases include identifiers table (ones don’t)","code":""},{"path":"https://traitecoevo.github.io/austraits/news/index.html","id":"austraits-302","dir":"Changelog","previous_headings":"","what":"austraits 3.0.2","title":"austraits 3.0.2","text":"Updated dependencies, placing graphics related packages Suggests Added internal function check compatibility databases Added internal function notify users database versions supported extract_* trait_pivot_wider join_* plot_site/locations plot_trait_beeswarm as_wide_table trait_pivot_longer deprecated summarise_trait_means trigger warning due uninformed calculations Added new function extract_data Added new function bind_databases Added new function flatten_databases Updated print function print.traits.build - thanks @Rekyt!","code":""}]

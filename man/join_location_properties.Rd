% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_all.R
\name{join_location_properties}
\alias{join_location_properties}
\title{Joining location properties to traits table}
\usage{
join_location_properties(
  austraits,
  format = "single_column_pretty",
  vars = "all"
)
}
\arguments{
\item{austraits}{traits.build database}

\item{format}{Specifies whether metadata from the locations is output in a human readable format ("single_column_pretty"; default), with each location property added as a separate column ("many_columns") or using json syntax ("single_column_json").}

\item{vars}{Location properties for which data is to be appended to the traits table, defaulting to all location properties (vars = "all").}
}
\value{
traits.build list object, but location properties from the locations table appended to the traits table.
}
\description{
Function to merge metadata from the locations table of a traits.build database into the core traits table.
}
\details{
the \code{join_} functions have been developed to join relational tables for databases built using the traits.build workflow.
Learn more at:
\url{https://github.com/traitecoevo/traits.build} &
\url{https://github.com/traitecoevo/traits.build-book}

Note to AusTraits users:
\itemize{
\item This function works with AusTraits version >= 5.0.0 (from Nov 2023 release)
\item For AusTraits versions <= 4.2.0 (up to Sept 2023 release) see \url{https://github.com/traitecoevo/austraits}  for how to install old versions of the package or download a newer version of the database.
}
}
\examples{
\dontrun{
(database \%>\% join_location_properties(format = "single_column_pretty", vars = "all"))$traits
}
}
